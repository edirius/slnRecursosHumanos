//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaUsuario.Reportes
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class bdpersonalEntities : DbContext
    {
        public bdpersonalEntities()
            : base("name=bdpersonalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<tactividadobra> tactividadobra { get; set; }
        public DbSet<tafp> tafp { get; set; }
        public DbSet<taportaciones> taportaciones { get; set; }
        public DbSet<tcargo> tcargo { get; set; }
        public DbSet<tcategoriaocupacional> tcategoriaocupacional { get; set; }
        public DbSet<tcomisiones> tcomisiones { get; set; }
        public DbSet<tcontrato> tcontrato { get; set; }
        public DbSet<tdepartamento> tdepartamento { get; set; }
        public DbSet<tdetalleplanilla> tdetalleplanilla { get; set; }
        public DbSet<tdetalleplantillaaportaciones> tdetalleplantillaaportaciones { get; set; }
        public DbSet<tdetalleplantillaplanillaegresos> tdetalleplantillaplanillaegresos { get; set; }
        public DbSet<tdetalleplantillaplanillaingresos> tdetalleplantillaplanillaingresos { get; set; }
        public DbSet<tdetalletareo> tdetalletareo { get; set; }
        public DbSet<tdistrito> tdistrito { get; set; }
        public DbSet<tdivisionfuncional> tdivisionfuncional { get; set; }
        public DbSet<tegresos> tegresos { get; set; }
        public DbSet<tfuentefinanciamiento> tfuentefinanciamiento { get; set; }
        public DbSet<tfuncion> tfuncion { get; set; }
        public DbSet<tgrupofuncional> tgrupofuncional { get; set; }
        public DbSet<tingresos> tingresos { get; set; }
        public DbSet<tmaestroaportaciones> tmaestroaportaciones { get; set; }
        public DbSet<tmaestroaportacionesempleador> tmaestroaportacionesempleador { get; set; }
        public DbSet<tmaestroaportacionestrabajador> tmaestroaportacionestrabajador { get; set; }
        public DbSet<tmaestrodescuentos> tmaestrodescuentos { get; set; }
        public DbSet<tmaestroegresos> tmaestroegresos { get; set; }
        public DbSet<tmaestroingresos> tmaestroingresos { get; set; }
        public DbSet<tmeta> tmeta { get; set; }
        public DbSet<tmetajornal> tmetajornal { get; set; }
        public DbSet<tmotivofinperiodo> tmotivofinperiodo { get; set; }
        public DbSet<tnacionalidad> tnacionalidad { get; set; }
        public DbSet<tocupacion> tocupacion { get; set; }
        public DbSet<tperiodotrabajador> tperiodotrabajador { get; set; }
        public DbSet<tplanilla> tplanilla { get; set; }
        public DbSet<tplantillaplanilla> tplantillaplanilla { get; set; }
        public DbSet<tproductoproyecto> tproductoproyecto { get; set; }
        public DbSet<tprogramapresupuestal> tprogramapresupuestal { get; set; }
        public DbSet<tprovincia> tprovincia { get; set; }
        public DbSet<tregimenlaboral> tregimenlaboral { get; set; }
        public DbSet<tregimenpensionariotrabajador> tregimenpensionariotrabajador { get; set; }
        public DbSet<tregimensaludtrabajador> tregimensaludtrabajador { get; set; }
        public DbSet<tregimentrabajador> tregimentrabajador { get; set; }
        public DbSet<tresidentemeta> tresidentemeta { get; set; }
        public DbSet<tsunattipotrabajador> tsunattipotrabajador { get; set; }
        public DbSet<ttareo> ttareo { get; set; }
        public DbSet<ttipocontrato> ttipocontrato { get; set; }
        public DbSet<ttipovia> ttipovia { get; set; }
        public DbSet<ttipozona> ttipozona { get; set; }
        public DbSet<ttrabajador> ttrabajador { get; set; }
        public DbSet<tvariables> tvariables { get; set; }
        public DbSet<tzona> tzona { get; set; }
    
        public virtual ObjectResult<listarAFP_Result> listarAFP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listarAFP_Result>("listarAFP");
        }
    
        public virtual ObjectResult<spComisionesxAFP_Result> spComisionesxAFP(Nullable<int> idtAFP)
        {
            var idtAFPParameter = idtAFP.HasValue ?
                new ObjectParameter("idtAFP", idtAFP) :
                new ObjectParameter("idtAFP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spComisionesxAFP_Result>("spComisionesxAFP", idtAFPParameter);
        }
    
        public virtual int spCrearActividadObra(string nombre, string actividadobra, Nullable<int> año, Nullable<int> idproductoproyecto)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var actividadobraParameter = actividadobra != null ?
                new ObjectParameter("actividadobra", actividadobra) :
                new ObjectParameter("actividadobra", typeof(string));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var idproductoproyectoParameter = idproductoproyecto.HasValue ?
                new ObjectParameter("idproductoproyecto", idproductoproyecto) :
                new ObjectParameter("idproductoproyecto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearActividadObra", nombreParameter, actividadobraParameter, añoParameter, idproductoproyectoParameter);
        }
    
        public virtual ObjectResult<spCrearAFP_Result> spCrearAFP(string nombre, string codigosunat, string tipo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var codigosunatParameter = codigosunat != null ?
                new ObjectParameter("codigosunat", codigosunat) :
                new ObjectParameter("codigosunat", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCrearAFP_Result>("spCrearAFP", nombreParameter, codigosunatParameter, tipoParameter);
        }
    
        public virtual int spCrearCargo(string descripcion)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearCargo", descripcionParameter);
        }
    
        public virtual int spCrearComision(Nullable<int> idtafp, Nullable<System.DateTime> mes, Nullable<decimal> primaseguros, Nullable<decimal> aporteobligatorio, Nullable<decimal> remuneracionasegurable, Nullable<decimal> comisionflujo, Nullable<decimal> comisionmixta)
        {
            var idtafpParameter = idtafp.HasValue ?
                new ObjectParameter("idtafp", idtafp) :
                new ObjectParameter("idtafp", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("mes", mes) :
                new ObjectParameter("mes", typeof(System.DateTime));
    
            var primasegurosParameter = primaseguros.HasValue ?
                new ObjectParameter("primaseguros", primaseguros) :
                new ObjectParameter("primaseguros", typeof(decimal));
    
            var aporteobligatorioParameter = aporteobligatorio.HasValue ?
                new ObjectParameter("aporteobligatorio", aporteobligatorio) :
                new ObjectParameter("aporteobligatorio", typeof(decimal));
    
            var remuneracionasegurableParameter = remuneracionasegurable.HasValue ?
                new ObjectParameter("remuneracionasegurable", remuneracionasegurable) :
                new ObjectParameter("remuneracionasegurable", typeof(decimal));
    
            var comisionflujoParameter = comisionflujo.HasValue ?
                new ObjectParameter("comisionflujo", comisionflujo) :
                new ObjectParameter("comisionflujo", typeof(decimal));
    
            var comisionmixtaParameter = comisionmixta.HasValue ?
                new ObjectParameter("comisionmixta", comisionmixta) :
                new ObjectParameter("comisionmixta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearComision", idtafpParameter, mesParameter, primasegurosParameter, aporteobligatorioParameter, remuneracionasegurableParameter, comisionflujoParameter, comisionmixtaParameter);
        }
    
        public virtual int spCrearContrato(Nullable<int> idtTrabajador, Nullable<int> idtsunattipotrabajador, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal, Nullable<int> numero, Nullable<int> idtmeta)
        {
            var idtTrabajadorParameter = idtTrabajador.HasValue ?
                new ObjectParameter("idtTrabajador", idtTrabajador) :
                new ObjectParameter("idtTrabajador", typeof(int));
    
            var idtsunattipotrabajadorParameter = idtsunattipotrabajador.HasValue ?
                new ObjectParameter("idtsunattipotrabajador", idtsunattipotrabajador) :
                new ObjectParameter("idtsunattipotrabajador", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("fechaFinal", fechaFinal) :
                new ObjectParameter("fechaFinal", typeof(System.DateTime));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            var idtmetaParameter = idtmeta.HasValue ?
                new ObjectParameter("idtmeta", idtmeta) :
                new ObjectParameter("idtmeta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearContrato", idtTrabajadorParameter, idtsunattipotrabajadorParameter, fechaInicioParameter, fechaFinalParameter, numeroParameter, idtmetaParameter);
        }
    
        public virtual int spCrearDetallePlanilla(Nullable<decimal> psueldo, Nullable<System.DateTime> pfechainicio, Nullable<int> pdiaslaborados, Nullable<int> pidtcargo, Nullable<int> pidttrabajador, Nullable<int> pidtplanilla)
        {
            var psueldoParameter = psueldo.HasValue ?
                new ObjectParameter("psueldo", psueldo) :
                new ObjectParameter("psueldo", typeof(decimal));
    
            var pfechainicioParameter = pfechainicio.HasValue ?
                new ObjectParameter("pfechainicio", pfechainicio) :
                new ObjectParameter("pfechainicio", typeof(System.DateTime));
    
            var pdiaslaboradosParameter = pdiaslaborados.HasValue ?
                new ObjectParameter("pdiaslaborados", pdiaslaborados) :
                new ObjectParameter("pdiaslaborados", typeof(int));
    
            var pidtcargoParameter = pidtcargo.HasValue ?
                new ObjectParameter("pidtcargo", pidtcargo) :
                new ObjectParameter("pidtcargo", typeof(int));
    
            var pidttrabajadorParameter = pidttrabajador.HasValue ?
                new ObjectParameter("pidttrabajador", pidttrabajador) :
                new ObjectParameter("pidttrabajador", typeof(int));
    
            var pidtplanillaParameter = pidtplanilla.HasValue ?
                new ObjectParameter("pidtplanilla", pidtplanilla) :
                new ObjectParameter("pidtplanilla", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearDetallePlanilla", psueldoParameter, pfechainicioParameter, pdiaslaboradosParameter, pidtcargoParameter, pidttrabajadorParameter, pidtplanillaParameter);
        }
    
        public virtual int spCrearDetalleTareo(string pcategoria, string pdiastareo, Nullable<int> pidttrabajador, Nullable<int> pidttareo)
        {
            var pcategoriaParameter = pcategoria != null ?
                new ObjectParameter("pcategoria", pcategoria) :
                new ObjectParameter("pcategoria", typeof(string));
    
            var pdiastareoParameter = pdiastareo != null ?
                new ObjectParameter("pdiastareo", pdiastareo) :
                new ObjectParameter("pdiastareo", typeof(string));
    
            var pidttrabajadorParameter = pidttrabajador.HasValue ?
                new ObjectParameter("pidttrabajador", pidttrabajador) :
                new ObjectParameter("pidttrabajador", typeof(int));
    
            var pidttareoParameter = pidttareo.HasValue ?
                new ObjectParameter("pidttareo", pidttareo) :
                new ObjectParameter("pidttareo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearDetalleTareo", pcategoriaParameter, pdiastareoParameter, pidttrabajadorParameter, pidttareoParameter);
        }
    
        public virtual int spCrearDiasTareo(Nullable<System.DateTime> pfecha, Nullable<bool> pestado, Nullable<int> pidtdetalletareo)
        {
            var pfechaParameter = pfecha.HasValue ?
                new ObjectParameter("pfecha", pfecha) :
                new ObjectParameter("pfecha", typeof(System.DateTime));
    
            var pestadoParameter = pestado.HasValue ?
                new ObjectParameter("pestado", pestado) :
                new ObjectParameter("pestado", typeof(bool));
    
            var pidtdetalletareoParameter = pidtdetalletareo.HasValue ?
                new ObjectParameter("pidtdetalletareo", pidtdetalletareo) :
                new ObjectParameter("pidtdetalletareo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearDiasTareo", pfechaParameter, pestadoParameter, pidtdetalletareoParameter);
        }
    
        public virtual int spCrearDiaTareo(Nullable<System.DateTime> dia, string tipodia, Nullable<int> idDetalleTareo)
        {
            var diaParameter = dia.HasValue ?
                new ObjectParameter("dia", dia) :
                new ObjectParameter("dia", typeof(System.DateTime));
    
            var tipodiaParameter = tipodia != null ?
                new ObjectParameter("tipodia", tipodia) :
                new ObjectParameter("tipodia", typeof(string));
    
            var idDetalleTareoParameter = idDetalleTareo.HasValue ?
                new ObjectParameter("idDetalleTareo", idDetalleTareo) :
                new ObjectParameter("idDetalleTareo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearDiaTareo", diaParameter, tipodiaParameter, idDetalleTareoParameter);
        }
    
        public virtual int spCrearDivisionFuncional(string nombre, string divisionfuncional, Nullable<int> año, Nullable<int> idFuncion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var divisionfuncionalParameter = divisionfuncional != null ?
                new ObjectParameter("divisionfuncional", divisionfuncional) :
                new ObjectParameter("divisionfuncional", typeof(string));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var idFuncionParameter = idFuncion.HasValue ?
                new ObjectParameter("idFuncion", idFuncion) :
                new ObjectParameter("idFuncion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearDivisionFuncional", nombreParameter, divisionfuncionalParameter, añoParameter, idFuncionParameter);
        }
    
        public virtual int spCrearFuncion(string nombre, string funcion, Nullable<int> año)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var funcionParameter = funcion != null ?
                new ObjectParameter("funcion", funcion) :
                new ObjectParameter("funcion", typeof(string));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearFuncion", nombreParameter, funcionParameter, añoParameter);
        }
    
        public virtual int spCrearGrupoFuncional(string nombre, string grupoFuncional, Nullable<int> año, Nullable<int> idDivisionFuncional)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var grupoFuncionalParameter = grupoFuncional != null ?
                new ObjectParameter("grupoFuncional", grupoFuncional) :
                new ObjectParameter("grupoFuncional", typeof(string));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var idDivisionFuncionalParameter = idDivisionFuncional.HasValue ?
                new ObjectParameter("idDivisionFuncional", idDivisionFuncional) :
                new ObjectParameter("idDivisionFuncional", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearGrupoFuncional", nombreParameter, grupoFuncionalParameter, añoParameter, idDivisionFuncionalParameter);
        }
    
        public virtual int spCrearMeta(Nullable<int> año, string nombre, Nullable<int> numero, Nullable<int> idGrupoFuncional, Nullable<int> idActividadObra)
        {
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            var idGrupoFuncionalParameter = idGrupoFuncional.HasValue ?
                new ObjectParameter("idGrupoFuncional", idGrupoFuncional) :
                new ObjectParameter("idGrupoFuncional", typeof(int));
    
            var idActividadObraParameter = idActividadObra.HasValue ?
                new ObjectParameter("idActividadObra", idActividadObra) :
                new ObjectParameter("idActividadObra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearMeta", añoParameter, nombreParameter, numeroParameter, idGrupoFuncionalParameter, idActividadObraParameter);
        }
    
        public virtual int spCrearMetaJornal(string pcategoria, Nullable<int> pjornal, Nullable<int> pidtmeta)
        {
            var pcategoriaParameter = pcategoria != null ?
                new ObjectParameter("pcategoria", pcategoria) :
                new ObjectParameter("pcategoria", typeof(string));
    
            var pjornalParameter = pjornal.HasValue ?
                new ObjectParameter("pjornal", pjornal) :
                new ObjectParameter("pjornal", typeof(int));
    
            var pidtmetaParameter = pidtmeta.HasValue ?
                new ObjectParameter("pidtmeta", pidtmeta) :
                new ObjectParameter("pidtmeta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearMetaJornal", pcategoriaParameter, pjornalParameter, pidtmetaParameter);
        }
    
        public virtual int spCrearPeriodo(Nullable<int> idtTrabajador, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> idtMotivoFinPeriodo)
        {
            var idtTrabajadorParameter = idtTrabajador.HasValue ?
                new ObjectParameter("idtTrabajador", idtTrabajador) :
                new ObjectParameter("idtTrabajador", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var idtMotivoFinPeriodoParameter = idtMotivoFinPeriodo.HasValue ?
                new ObjectParameter("idtMotivoFinPeriodo", idtMotivoFinPeriodo) :
                new ObjectParameter("idtMotivoFinPeriodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearPeriodo", idtTrabajadorParameter, fechaInicioParameter, fechaFinParameter, idtMotivoFinPeriodoParameter);
        }
    
        public virtual int spCrearPeriodoTipoTrabajador(Nullable<int> idttrabajador, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechafin, Nullable<int> idtsunattipotrabajador)
        {
            var idttrabajadorParameter = idttrabajador.HasValue ?
                new ObjectParameter("idttrabajador", idttrabajador) :
                new ObjectParameter("idttrabajador", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechafinParameter = fechafin.HasValue ?
                new ObjectParameter("fechafin", fechafin) :
                new ObjectParameter("fechafin", typeof(System.DateTime));
    
            var idtsunattipotrabajadorParameter = idtsunattipotrabajador.HasValue ?
                new ObjectParameter("idtsunattipotrabajador", idtsunattipotrabajador) :
                new ObjectParameter("idtsunattipotrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearPeriodoTipoTrabajador", idttrabajadorParameter, fechaInicioParameter, fechafinParameter, idtsunattipotrabajadorParameter);
        }
    
        public virtual int spCrearPeriodoTrabajador(string pfechainicio, string pfechafin, Nullable<int> pidtmotivofinperiodo, Nullable<int> pidttrabajador)
        {
            var pfechainicioParameter = pfechainicio != null ?
                new ObjectParameter("pfechainicio", pfechainicio) :
                new ObjectParameter("pfechainicio", typeof(string));
    
            var pfechafinParameter = pfechafin != null ?
                new ObjectParameter("pfechafin", pfechafin) :
                new ObjectParameter("pfechafin", typeof(string));
    
            var pidtmotivofinperiodoParameter = pidtmotivofinperiodo.HasValue ?
                new ObjectParameter("pidtmotivofinperiodo", pidtmotivofinperiodo) :
                new ObjectParameter("pidtmotivofinperiodo", typeof(int));
    
            var pidttrabajadorParameter = pidttrabajador.HasValue ?
                new ObjectParameter("pidttrabajador", pidttrabajador) :
                new ObjectParameter("pidttrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearPeriodoTrabajador", pfechainicioParameter, pfechafinParameter, pidtmotivofinperiodoParameter, pidttrabajadorParameter);
        }
    
        public virtual int spCrearPlanilla(string pnumero, string pmes, string paño, Nullable<System.DateTime> pfecha, Nullable<int> pidtmeta, Nullable<int> pidtfuentefinanciamiento, Nullable<int> pidtregimenlaboral)
        {
            var pnumeroParameter = pnumero != null ?
                new ObjectParameter("pnumero", pnumero) :
                new ObjectParameter("pnumero", typeof(string));
    
            var pmesParameter = pmes != null ?
                new ObjectParameter("pmes", pmes) :
                new ObjectParameter("pmes", typeof(string));
    
            var pañoParameter = paño != null ?
                new ObjectParameter("paño", paño) :
                new ObjectParameter("paño", typeof(string));
    
            var pfechaParameter = pfecha.HasValue ?
                new ObjectParameter("pfecha", pfecha) :
                new ObjectParameter("pfecha", typeof(System.DateTime));
    
            var pidtmetaParameter = pidtmeta.HasValue ?
                new ObjectParameter("pidtmeta", pidtmeta) :
                new ObjectParameter("pidtmeta", typeof(int));
    
            var pidtfuentefinanciamientoParameter = pidtfuentefinanciamiento.HasValue ?
                new ObjectParameter("pidtfuentefinanciamiento", pidtfuentefinanciamiento) :
                new ObjectParameter("pidtfuentefinanciamiento", typeof(int));
    
            var pidtregimenlaboralParameter = pidtregimenlaboral.HasValue ?
                new ObjectParameter("pidtregimenlaboral", pidtregimenlaboral) :
                new ObjectParameter("pidtregimenlaboral", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearPlanilla", pnumeroParameter, pmesParameter, pañoParameter, pfechaParameter, pidtmetaParameter, pidtfuentefinanciamientoParameter, pidtregimenlaboralParameter);
        }
    
        public virtual int spCrearPlantillaPlanilla(string ptipo, Nullable<int> pcodigo, Nullable<int> pidtregimenlaboral)
        {
            var ptipoParameter = ptipo != null ?
                new ObjectParameter("ptipo", ptipo) :
                new ObjectParameter("ptipo", typeof(string));
    
            var pcodigoParameter = pcodigo.HasValue ?
                new ObjectParameter("pcodigo", pcodigo) :
                new ObjectParameter("pcodigo", typeof(int));
    
            var pidtregimenlaboralParameter = pidtregimenlaboral.HasValue ?
                new ObjectParameter("pidtregimenlaboral", pidtregimenlaboral) :
                new ObjectParameter("pidtregimenlaboral", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearPlantillaPlanilla", ptipoParameter, pcodigoParameter, pidtregimenlaboralParameter);
        }
    
        public virtual int spCrearProductoProyecto(string nombre, string productoproyecto, Nullable<int> año, Nullable<int> idprogramapresupuestal)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var productoproyectoParameter = productoproyecto != null ?
                new ObjectParameter("productoproyecto", productoproyecto) :
                new ObjectParameter("productoproyecto", typeof(string));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var idprogramapresupuestalParameter = idprogramapresupuestal.HasValue ?
                new ObjectParameter("idprogramapresupuestal", idprogramapresupuestal) :
                new ObjectParameter("idprogramapresupuestal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearProductoProyecto", nombreParameter, productoproyectoParameter, añoParameter, idprogramapresupuestalParameter);
        }
    
        public virtual int spCrearProgramaPresupuestal(string nombre, string programapresupuestal, Nullable<int> año)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var programapresupuestalParameter = programapresupuestal != null ?
                new ObjectParameter("programapresupuestal", programapresupuestal) :
                new ObjectParameter("programapresupuestal", typeof(string));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearProgramaPresupuestal", nombreParameter, programapresupuestalParameter, añoParameter);
        }
    
        public virtual int spCrearRegimenPensionarioTrabajador(string pfechainicio, string pfechafin, string pcuspp, string ptipocomision, Nullable<int> pidtafp, Nullable<int> pidtperiodotrabajador)
        {
            var pfechainicioParameter = pfechainicio != null ?
                new ObjectParameter("pfechainicio", pfechainicio) :
                new ObjectParameter("pfechainicio", typeof(string));
    
            var pfechafinParameter = pfechafin != null ?
                new ObjectParameter("pfechafin", pfechafin) :
                new ObjectParameter("pfechafin", typeof(string));
    
            var pcusppParameter = pcuspp != null ?
                new ObjectParameter("pcuspp", pcuspp) :
                new ObjectParameter("pcuspp", typeof(string));
    
            var ptipocomisionParameter = ptipocomision != null ?
                new ObjectParameter("ptipocomision", ptipocomision) :
                new ObjectParameter("ptipocomision", typeof(string));
    
            var pidtafpParameter = pidtafp.HasValue ?
                new ObjectParameter("pidtafp", pidtafp) :
                new ObjectParameter("pidtafp", typeof(int));
    
            var pidtperiodotrabajadorParameter = pidtperiodotrabajador.HasValue ?
                new ObjectParameter("pidtperiodotrabajador", pidtperiodotrabajador) :
                new ObjectParameter("pidtperiodotrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearRegimenPensionarioTrabajador", pfechainicioParameter, pfechafinParameter, pcusppParameter, ptipocomisionParameter, pidtafpParameter, pidtperiodotrabajadorParameter);
        }
    
        public virtual int spCrearRegimenSaludTrabajador(string pregimensalud, string pfechainicio, string pfechafin, string pentidadprestadorasalud, Nullable<int> pidtperiodotrabajador)
        {
            var pregimensaludParameter = pregimensalud != null ?
                new ObjectParameter("pregimensalud", pregimensalud) :
                new ObjectParameter("pregimensalud", typeof(string));
    
            var pfechainicioParameter = pfechainicio != null ?
                new ObjectParameter("pfechainicio", pfechainicio) :
                new ObjectParameter("pfechainicio", typeof(string));
    
            var pfechafinParameter = pfechafin != null ?
                new ObjectParameter("pfechafin", pfechafin) :
                new ObjectParameter("pfechafin", typeof(string));
    
            var pentidadprestadorasaludParameter = pentidadprestadorasalud != null ?
                new ObjectParameter("pentidadprestadorasalud", pentidadprestadorasalud) :
                new ObjectParameter("pentidadprestadorasalud", typeof(string));
    
            var pidtperiodotrabajadorParameter = pidtperiodotrabajador.HasValue ?
                new ObjectParameter("pidtperiodotrabajador", pidtperiodotrabajador) :
                new ObjectParameter("pidtperiodotrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearRegimenSaludTrabajador", pregimensaludParameter, pfechainicioParameter, pfechafinParameter, pentidadprestadorasaludParameter, pidtperiodotrabajadorParameter);
        }
    
        public virtual int spCrearRegimenTrabajador(string pcondicion, Nullable<bool> pservidorconfianza, string pnumerodocumento, string pperiodicidad, string ptipopago, Nullable<decimal> pmontopago, string pfechainicio, string pfechafin, string pruc, Nullable<int> pidtregimenlaboral, Nullable<int> pidttipotrabajador, Nullable<int> pidttipocontrato, Nullable<int> pidtcategoriaocupacional, Nullable<int> pidtocupacion, Nullable<int> pidtcargo, Nullable<int> pidtmeta, Nullable<int> pidtperiodotrabajador)
        {
            var pcondicionParameter = pcondicion != null ?
                new ObjectParameter("pcondicion", pcondicion) :
                new ObjectParameter("pcondicion", typeof(string));
    
            var pservidorconfianzaParameter = pservidorconfianza.HasValue ?
                new ObjectParameter("pservidorconfianza", pservidorconfianza) :
                new ObjectParameter("pservidorconfianza", typeof(bool));
    
            var pnumerodocumentoParameter = pnumerodocumento != null ?
                new ObjectParameter("pnumerodocumento", pnumerodocumento) :
                new ObjectParameter("pnumerodocumento", typeof(string));
    
            var pperiodicidadParameter = pperiodicidad != null ?
                new ObjectParameter("pperiodicidad", pperiodicidad) :
                new ObjectParameter("pperiodicidad", typeof(string));
    
            var ptipopagoParameter = ptipopago != null ?
                new ObjectParameter("ptipopago", ptipopago) :
                new ObjectParameter("ptipopago", typeof(string));
    
            var pmontopagoParameter = pmontopago.HasValue ?
                new ObjectParameter("pmontopago", pmontopago) :
                new ObjectParameter("pmontopago", typeof(decimal));
    
            var pfechainicioParameter = pfechainicio != null ?
                new ObjectParameter("pfechainicio", pfechainicio) :
                new ObjectParameter("pfechainicio", typeof(string));
    
            var pfechafinParameter = pfechafin != null ?
                new ObjectParameter("pfechafin", pfechafin) :
                new ObjectParameter("pfechafin", typeof(string));
    
            var prucParameter = pruc != null ?
                new ObjectParameter("pruc", pruc) :
                new ObjectParameter("pruc", typeof(string));
    
            var pidtregimenlaboralParameter = pidtregimenlaboral.HasValue ?
                new ObjectParameter("pidtregimenlaboral", pidtregimenlaboral) :
                new ObjectParameter("pidtregimenlaboral", typeof(int));
    
            var pidttipotrabajadorParameter = pidttipotrabajador.HasValue ?
                new ObjectParameter("pidttipotrabajador", pidttipotrabajador) :
                new ObjectParameter("pidttipotrabajador", typeof(int));
    
            var pidttipocontratoParameter = pidttipocontrato.HasValue ?
                new ObjectParameter("pidttipocontrato", pidttipocontrato) :
                new ObjectParameter("pidttipocontrato", typeof(int));
    
            var pidtcategoriaocupacionalParameter = pidtcategoriaocupacional.HasValue ?
                new ObjectParameter("pidtcategoriaocupacional", pidtcategoriaocupacional) :
                new ObjectParameter("pidtcategoriaocupacional", typeof(int));
    
            var pidtocupacionParameter = pidtocupacion.HasValue ?
                new ObjectParameter("pidtocupacion", pidtocupacion) :
                new ObjectParameter("pidtocupacion", typeof(int));
    
            var pidtcargoParameter = pidtcargo.HasValue ?
                new ObjectParameter("pidtcargo", pidtcargo) :
                new ObjectParameter("pidtcargo", typeof(int));
    
            var pidtmetaParameter = pidtmeta.HasValue ?
                new ObjectParameter("pidtmeta", pidtmeta) :
                new ObjectParameter("pidtmeta", typeof(int));
    
            var pidtperiodotrabajadorParameter = pidtperiodotrabajador.HasValue ?
                new ObjectParameter("pidtperiodotrabajador", pidtperiodotrabajador) :
                new ObjectParameter("pidtperiodotrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearRegimenTrabajador", pcondicionParameter, pservidorconfianzaParameter, pnumerodocumentoParameter, pperiodicidadParameter, ptipopagoParameter, pmontopagoParameter, pfechainicioParameter, pfechafinParameter, prucParameter, pidtregimenlaboralParameter, pidttipotrabajadorParameter, pidttipocontratoParameter, pidtcategoriaocupacionalParameter, pidtocupacionParameter, pidtcargoParameter, pidtmetaParameter, pidtperiodotrabajadorParameter);
        }
    
        public virtual int spCrearResidenteMeta(Nullable<int> pidtmeta, Nullable<int> pidttrabajador)
        {
            var pidtmetaParameter = pidtmeta.HasValue ?
                new ObjectParameter("pidtmeta", pidtmeta) :
                new ObjectParameter("pidtmeta", typeof(int));
    
            var pidttrabajadorParameter = pidttrabajador.HasValue ?
                new ObjectParameter("pidttrabajador", pidttrabajador) :
                new ObjectParameter("pidttrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearResidenteMeta", pidtmetaParameter, pidttrabajadorParameter);
        }
    
        public virtual int spCrearTareo(Nullable<int> pnumero, Nullable<System.DateTime> pfechaInicio, Nullable<System.DateTime> pfechaFin, string pdescripcion, Nullable<bool> pestado, Nullable<int> pidtmeta)
        {
            var pnumeroParameter = pnumero.HasValue ?
                new ObjectParameter("pnumero", pnumero) :
                new ObjectParameter("pnumero", typeof(int));
    
            var pfechaInicioParameter = pfechaInicio.HasValue ?
                new ObjectParameter("pfechaInicio", pfechaInicio) :
                new ObjectParameter("pfechaInicio", typeof(System.DateTime));
    
            var pfechaFinParameter = pfechaFin.HasValue ?
                new ObjectParameter("pfechaFin", pfechaFin) :
                new ObjectParameter("pfechaFin", typeof(System.DateTime));
    
            var pdescripcionParameter = pdescripcion != null ?
                new ObjectParameter("pdescripcion", pdescripcion) :
                new ObjectParameter("pdescripcion", typeof(string));
    
            var pestadoParameter = pestado.HasValue ?
                new ObjectParameter("pestado", pestado) :
                new ObjectParameter("pestado", typeof(bool));
    
            var pidtmetaParameter = pidtmeta.HasValue ?
                new ObjectParameter("pidtmeta", pidtmeta) :
                new ObjectParameter("pidtmeta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearTareo", pnumeroParameter, pfechaInicioParameter, pfechaFinParameter, pdescripcionParameter, pestadoParameter, pidtmetaParameter);
        }
    
        public virtual int spCrearTrabajador(string nombres, string apellidoPaterno, string apellidoMaterno, string sexo, string estadoCivil, string direccion, string dni, string celular, string celularInstitucional, Nullable<System.DateTime> fechaNacimiento, byte[] foto, string correoelectronico, Nullable<int> idtipovia, string nombrevia, string numerovia, string departamento, Nullable<int> idtzona, string nombrezona, string referencia, Nullable<int> idtdistrito, Nullable<int> idtnacionalidad)
        {
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("apellidoPaterno", apellidoPaterno) :
                new ObjectParameter("apellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("apellidoMaterno", apellidoMaterno) :
                new ObjectParameter("apellidoMaterno", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("estadoCivil", estadoCivil) :
                new ObjectParameter("estadoCivil", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var dniParameter = dni != null ?
                new ObjectParameter("dni", dni) :
                new ObjectParameter("dni", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("celular", celular) :
                new ObjectParameter("celular", typeof(string));
    
            var celularInstitucionalParameter = celularInstitucional != null ?
                new ObjectParameter("celularInstitucional", celularInstitucional) :
                new ObjectParameter("celularInstitucional", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("foto", foto) :
                new ObjectParameter("foto", typeof(byte[]));
    
            var correoelectronicoParameter = correoelectronico != null ?
                new ObjectParameter("correoelectronico", correoelectronico) :
                new ObjectParameter("correoelectronico", typeof(string));
    
            var idtipoviaParameter = idtipovia.HasValue ?
                new ObjectParameter("idtipovia", idtipovia) :
                new ObjectParameter("idtipovia", typeof(int));
    
            var nombreviaParameter = nombrevia != null ?
                new ObjectParameter("nombrevia", nombrevia) :
                new ObjectParameter("nombrevia", typeof(string));
    
            var numeroviaParameter = numerovia != null ?
                new ObjectParameter("numerovia", numerovia) :
                new ObjectParameter("numerovia", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("departamento", departamento) :
                new ObjectParameter("departamento", typeof(string));
    
            var idtzonaParameter = idtzona.HasValue ?
                new ObjectParameter("idtzona", idtzona) :
                new ObjectParameter("idtzona", typeof(int));
    
            var nombrezonaParameter = nombrezona != null ?
                new ObjectParameter("nombrezona", nombrezona) :
                new ObjectParameter("nombrezona", typeof(string));
    
            var referenciaParameter = referencia != null ?
                new ObjectParameter("referencia", referencia) :
                new ObjectParameter("referencia", typeof(string));
    
            var idtdistritoParameter = idtdistrito.HasValue ?
                new ObjectParameter("idtdistrito", idtdistrito) :
                new ObjectParameter("idtdistrito", typeof(int));
    
            var idtnacionalidadParameter = idtnacionalidad.HasValue ?
                new ObjectParameter("idtnacionalidad", idtnacionalidad) :
                new ObjectParameter("idtnacionalidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearTrabajador", nombresParameter, apellidoPaternoParameter, apellidoMaternoParameter, sexoParameter, estadoCivilParameter, direccionParameter, dniParameter, celularParameter, celularInstitucionalParameter, fechaNacimientoParameter, fotoParameter, correoelectronicoParameter, idtipoviaParameter, nombreviaParameter, numeroviaParameter, departamentoParameter, idtzonaParameter, nombrezonaParameter, referenciaParameter, idtdistritoParameter, idtnacionalidadParameter);
        }
    
        public virtual int spEliminarActividadObra(Nullable<int> idtactividadobra)
        {
            var idtactividadobraParameter = idtactividadobra.HasValue ?
                new ObjectParameter("idtactividadobra", idtactividadobra) :
                new ObjectParameter("idtactividadobra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarActividadObra", idtactividadobraParameter);
        }
    
        public virtual int spEliminarCargo(Nullable<int> idtcargo)
        {
            var idtcargoParameter = idtcargo.HasValue ?
                new ObjectParameter("idtcargo", idtcargo) :
                new ObjectParameter("idtcargo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarCargo", idtcargoParameter);
        }
    
        public virtual int spEliminarCategoriaOcupacional(Nullable<int> pidtcategoriaocupacional)
        {
            var pidtcategoriaocupacionalParameter = pidtcategoriaocupacional.HasValue ?
                new ObjectParameter("pidtcategoriaocupacional", pidtcategoriaocupacional) :
                new ObjectParameter("pidtcategoriaocupacional", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarCategoriaOcupacional", pidtcategoriaocupacionalParameter);
        }
    
        public virtual int spELiminarContrato(Nullable<int> idtContrato)
        {
            var idtContratoParameter = idtContrato.HasValue ?
                new ObjectParameter("idtContrato", idtContrato) :
                new ObjectParameter("idtContrato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spELiminarContrato", idtContratoParameter);
        }
    
        public virtual int spEliminarDetallePlanilla(Nullable<int> pidtdetalleplanilla)
        {
            var pidtdetalleplanillaParameter = pidtdetalleplanilla.HasValue ?
                new ObjectParameter("pidtdetalleplanilla", pidtdetalleplanilla) :
                new ObjectParameter("pidtdetalleplanilla", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarDetallePlanilla", pidtdetalleplanillaParameter);
        }
    
        public virtual int spEliminarDetalleTareo(Nullable<int> pidtdetalletareo)
        {
            var pidtdetalletareoParameter = pidtdetalletareo.HasValue ?
                new ObjectParameter("pidtdetalletareo", pidtdetalletareo) :
                new ObjectParameter("pidtdetalletareo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarDetalleTareo", pidtdetalletareoParameter);
        }
    
        public virtual int spEliminarDiasTareo(Nullable<int> pidtdiastareo)
        {
            var pidtdiastareoParameter = pidtdiastareo.HasValue ?
                new ObjectParameter("pidtdiastareo", pidtdiastareo) :
                new ObjectParameter("pidtdiastareo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarDiasTareo", pidtdiastareoParameter);
        }
    
        public virtual int spEliminarDiaTareo(Nullable<int> idcdiastareo)
        {
            var idcdiastareoParameter = idcdiastareo.HasValue ?
                new ObjectParameter("idcdiastareo", idcdiastareo) :
                new ObjectParameter("idcdiastareo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarDiaTareo", idcdiastareoParameter);
        }
    
        public virtual int spEliminarDivisionFuncional(Nullable<int> idtdivisionfuncional)
        {
            var idtdivisionfuncionalParameter = idtdivisionfuncional.HasValue ?
                new ObjectParameter("idtdivisionfuncional", idtdivisionfuncional) :
                new ObjectParameter("idtdivisionfuncional", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarDivisionFuncional", idtdivisionfuncionalParameter);
        }
    
        public virtual int spEliminarFuenteFinanciamiento(Nullable<int> pidtfuentefinanciamiento)
        {
            var pidtfuentefinanciamientoParameter = pidtfuentefinanciamiento.HasValue ?
                new ObjectParameter("pidtfuentefinanciamiento", pidtfuentefinanciamiento) :
                new ObjectParameter("pidtfuentefinanciamiento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarFuenteFinanciamiento", pidtfuentefinanciamientoParameter);
        }
    
        public virtual int spEliminarFuncion(Nullable<int> idtFuncion)
        {
            var idtFuncionParameter = idtFuncion.HasValue ?
                new ObjectParameter("idtFuncion", idtFuncion) :
                new ObjectParameter("idtFuncion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarFuncion", idtFuncionParameter);
        }
    
        public virtual int spEliminarGrupoFuncional(Nullable<int> idtgrupofuncional)
        {
            var idtgrupofuncionalParameter = idtgrupofuncional.HasValue ?
                new ObjectParameter("idtgrupofuncional", idtgrupofuncional) :
                new ObjectParameter("idtgrupofuncional", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarGrupoFuncional", idtgrupofuncionalParameter);
        }
    
        public virtual int spEliminarMaestroAportacionesEmpleador(Nullable<int> pidtmaestroaportacionesempleador)
        {
            var pidtmaestroaportacionesempleadorParameter = pidtmaestroaportacionesempleador.HasValue ?
                new ObjectParameter("pidtmaestroaportacionesempleador", pidtmaestroaportacionesempleador) :
                new ObjectParameter("pidtmaestroaportacionesempleador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarMaestroAportacionesEmpleador", pidtmaestroaportacionesempleadorParameter);
        }
    
        public virtual int spEliminarMaestroAportacionesTrabajador(Nullable<int> pidtmaestroaportacionestrabajador)
        {
            var pidtmaestroaportacionestrabajadorParameter = pidtmaestroaportacionestrabajador.HasValue ?
                new ObjectParameter("pidtmaestroaportacionestrabajador", pidtmaestroaportacionestrabajador) :
                new ObjectParameter("pidtmaestroaportacionestrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarMaestroAportacionesTrabajador", pidtmaestroaportacionestrabajadorParameter);
        }
    
        public virtual int spEliminarMaestroDescuentos(Nullable<int> pidtmaestrodescuentos)
        {
            var pidtmaestrodescuentosParameter = pidtmaestrodescuentos.HasValue ?
                new ObjectParameter("pidtmaestrodescuentos", pidtmaestrodescuentos) :
                new ObjectParameter("pidtmaestrodescuentos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarMaestroDescuentos", pidtmaestrodescuentosParameter);
        }
    
        public virtual int spEliminarMaestroIngresos(Nullable<int> pidtmaestroingresos)
        {
            var pidtmaestroingresosParameter = pidtmaestroingresos.HasValue ?
                new ObjectParameter("pidtmaestroingresos", pidtmaestroingresos) :
                new ObjectParameter("pidtmaestroingresos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarMaestroIngresos", pidtmaestroingresosParameter);
        }
    
        public virtual int spEliminarMeta(Nullable<int> idtmeta)
        {
            var idtmetaParameter = idtmeta.HasValue ?
                new ObjectParameter("idtmeta", idtmeta) :
                new ObjectParameter("idtmeta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarMeta", idtmetaParameter);
        }
    
        public virtual int spEliminarMetaJornal(Nullable<int> pidtmetajornal)
        {
            var pidtmetajornalParameter = pidtmetajornal.HasValue ?
                new ObjectParameter("pidtmetajornal", pidtmetajornal) :
                new ObjectParameter("pidtmetajornal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarMetaJornal", pidtmetajornalParameter);
        }
    
        public virtual int spEliminarOcupacion(Nullable<int> pidtocupacion)
        {
            var pidtocupacionParameter = pidtocupacion.HasValue ?
                new ObjectParameter("pidtocupacion", pidtocupacion) :
                new ObjectParameter("pidtocupacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarOcupacion", pidtocupacionParameter);
        }
    
        public virtual int spEliminarPeriodo(Nullable<int> codigoPeriodo)
        {
            var codigoPeriodoParameter = codigoPeriodo.HasValue ?
                new ObjectParameter("codigoPeriodo", codigoPeriodo) :
                new ObjectParameter("codigoPeriodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarPeriodo", codigoPeriodoParameter);
        }
    
        public virtual int spEliminarPeriodoTipoTrabajador(Nullable<int> idtperiodotipotrabajador)
        {
            var idtperiodotipotrabajadorParameter = idtperiodotipotrabajador.HasValue ?
                new ObjectParameter("idtperiodotipotrabajador", idtperiodotipotrabajador) :
                new ObjectParameter("idtperiodotipotrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarPeriodoTipoTrabajador", idtperiodotipotrabajadorParameter);
        }
    
        public virtual int spEliminarPeriodoTrabajador(Nullable<int> pidtperiodotrabajador)
        {
            var pidtperiodotrabajadorParameter = pidtperiodotrabajador.HasValue ?
                new ObjectParameter("pidtperiodotrabajador", pidtperiodotrabajador) :
                new ObjectParameter("pidtperiodotrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarPeriodoTrabajador", pidtperiodotrabajadorParameter);
        }
    
        public virtual int spEliminarPlanilla(Nullable<int> pidtplanilla)
        {
            var pidtplanillaParameter = pidtplanilla.HasValue ?
                new ObjectParameter("pidtplanilla", pidtplanilla) :
                new ObjectParameter("pidtplanilla", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarPlanilla", pidtplanillaParameter);
        }
    
        public virtual int spEliminarPlantillaPlanilla(Nullable<int> pidtplantillaplanilla)
        {
            var pidtplantillaplanillaParameter = pidtplantillaplanilla.HasValue ?
                new ObjectParameter("pidtplantillaplanilla", pidtplantillaplanilla) :
                new ObjectParameter("pidtplantillaplanilla", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarPlantillaPlanilla", pidtplantillaplanillaParameter);
        }
    
        public virtual int spEliminarProductoProyecto(Nullable<int> idtproductoproyecto)
        {
            var idtproductoproyectoParameter = idtproductoproyecto.HasValue ?
                new ObjectParameter("idtproductoproyecto", idtproductoproyecto) :
                new ObjectParameter("idtproductoproyecto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarProductoProyecto", idtproductoproyectoParameter);
        }
    
        public virtual int spEliminarProgramaPresupuestal(Nullable<int> idtprogramapresupuestal)
        {
            var idtprogramapresupuestalParameter = idtprogramapresupuestal.HasValue ?
                new ObjectParameter("idtprogramapresupuestal", idtprogramapresupuestal) :
                new ObjectParameter("idtprogramapresupuestal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarProgramaPresupuestal", idtprogramapresupuestalParameter);
        }
    
        public virtual int spEliminarRegimenLaboral(Nullable<int> pidtregimenlaboral)
        {
            var pidtregimenlaboralParameter = pidtregimenlaboral.HasValue ?
                new ObjectParameter("pidtregimenlaboral", pidtregimenlaboral) :
                new ObjectParameter("pidtregimenlaboral", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarRegimenLaboral", pidtregimenlaboralParameter);
        }
    
        public virtual int spEliminarRegimenPensionarioTrabajador(Nullable<int> pidtregimenpensionariotrabajador)
        {
            var pidtregimenpensionariotrabajadorParameter = pidtregimenpensionariotrabajador.HasValue ?
                new ObjectParameter("pidtregimenpensionariotrabajador", pidtregimenpensionariotrabajador) :
                new ObjectParameter("pidtregimenpensionariotrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarRegimenPensionarioTrabajador", pidtregimenpensionariotrabajadorParameter);
        }
    
        public virtual int spEliminarRegimenSaludTrabajador(Nullable<int> pidtregimensaludtrabajador)
        {
            var pidtregimensaludtrabajadorParameter = pidtregimensaludtrabajador.HasValue ?
                new ObjectParameter("pidtregimensaludtrabajador", pidtregimensaludtrabajador) :
                new ObjectParameter("pidtregimensaludtrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarRegimenSaludTrabajador", pidtregimensaludtrabajadorParameter);
        }
    
        public virtual int spEliminarRegimenTrabajador(Nullable<int> pidtregimentrabajador)
        {
            var pidtregimentrabajadorParameter = pidtregimentrabajador.HasValue ?
                new ObjectParameter("pidtregimentrabajador", pidtregimentrabajador) :
                new ObjectParameter("pidtregimentrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarRegimenTrabajador", pidtregimentrabajadorParameter);
        }
    
        public virtual int spEliminarResidenteMeta(Nullable<int> pidtresidentemeta)
        {
            var pidtresidentemetaParameter = pidtresidentemeta.HasValue ?
                new ObjectParameter("pidtresidentemeta", pidtresidentemeta) :
                new ObjectParameter("pidtresidentemeta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarResidenteMeta", pidtresidentemetaParameter);
        }
    
        public virtual int spEliminarTareo(Nullable<int> pidttareo)
        {
            var pidttareoParameter = pidttareo.HasValue ?
                new ObjectParameter("pidttareo", pidttareo) :
                new ObjectParameter("pidttareo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarTareo", pidttareoParameter);
        }
    
        public virtual int spEliminarTrabajador(Nullable<int> codigoTrabajador)
        {
            var codigoTrabajadorParameter = codigoTrabajador.HasValue ?
                new ObjectParameter("codigoTrabajador", codigoTrabajador) :
                new ObjectParameter("codigoTrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarTrabajador", codigoTrabajadorParameter);
        }
    
        public virtual int spEliminarVariables(Nullable<int> pidtvariables)
        {
            var pidtvariablesParameter = pidtvariables.HasValue ?
                new ObjectParameter("pidtvariables", pidtvariables) :
                new ObjectParameter("pidtvariables", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarVariables", pidtvariablesParameter);
        }
    
        public virtual ObjectResult<spListaMotivosFinPeriodos_Result> spListaMotivosFinPeriodos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaMotivosFinPeriodos_Result>("spListaMotivosFinPeriodos");
        }
    
        public virtual ObjectResult<spListarActividadObra_Result> spListarActividadObra(Nullable<int> codProductoProyecto)
        {
            var codProductoProyectoParameter = codProductoProyecto.HasValue ?
                new ObjectParameter("codProductoProyecto", codProductoProyecto) :
                new ObjectParameter("codProductoProyecto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarActividadObra_Result>("spListarActividadObra", codProductoProyectoParameter);
        }
    
        public virtual ObjectResult<spListarCargos_Result> spListarCargos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarCargos_Result>("spListarCargos");
        }
    
        public virtual ObjectResult<spListarCategoriaOcupacional_Result> spListarCategoriaOcupacional()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarCategoriaOcupacional_Result>("spListarCategoriaOcupacional");
        }
    
        public virtual ObjectResult<spListarContratos_Result> spListarContratos(Nullable<int> codigoTrabajador)
        {
            var codigoTrabajadorParameter = codigoTrabajador.HasValue ?
                new ObjectParameter("codigoTrabajador", codigoTrabajador) :
                new ObjectParameter("codigoTrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarContratos_Result>("spListarContratos", codigoTrabajadorParameter);
        }
    
        public virtual ObjectResult<spListarDepartamentos_Result> spListarDepartamentos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarDepartamentos_Result>("spListarDepartamentos");
        }
    
        public virtual ObjectResult<spListarDetallePlanilla_Result> spListarDetallePlanilla(Nullable<int> pidtplanilla)
        {
            var pidtplanillaParameter = pidtplanilla.HasValue ?
                new ObjectParameter("pidtplanilla", pidtplanilla) :
                new ObjectParameter("pidtplanilla", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarDetallePlanilla_Result>("spListarDetallePlanilla", pidtplanillaParameter);
        }
    
        public virtual ObjectResult<spListarDetalleTareo_Result> spListarDetalleTareo(Nullable<int> pidttareo)
        {
            var pidttareoParameter = pidttareo.HasValue ?
                new ObjectParameter("pidttareo", pidttareo) :
                new ObjectParameter("pidttareo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarDetalleTareo_Result>("spListarDetalleTareo", pidttareoParameter);
        }
    
        public virtual int spListarDiasTareo(Nullable<int> pidtdetalletareo)
        {
            var pidtdetalletareoParameter = pidtdetalletareo.HasValue ?
                new ObjectParameter("pidtdetalletareo", pidtdetalletareo) :
                new ObjectParameter("pidtdetalletareo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spListarDiasTareo", pidtdetalletareoParameter);
        }
    
        public virtual ObjectResult<spListarDistritos_Result> spListarDistritos(Nullable<int> codProvincia)
        {
            var codProvinciaParameter = codProvincia.HasValue ?
                new ObjectParameter("codProvincia", codProvincia) :
                new ObjectParameter("codProvincia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarDistritos_Result>("spListarDistritos", codProvinciaParameter);
        }
    
        public virtual ObjectResult<spListarDivisionFuncional_Result> spListarDivisionFuncional(Nullable<int> funcion)
        {
            var funcionParameter = funcion.HasValue ?
                new ObjectParameter("funcion", funcion) :
                new ObjectParameter("funcion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarDivisionFuncional_Result>("spListarDivisionFuncional", funcionParameter);
        }
    
        public virtual ObjectResult<spListarFuenteFinanciamiento_Result> spListarFuenteFinanciamiento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarFuenteFinanciamiento_Result>("spListarFuenteFinanciamiento");
        }
    
        public virtual ObjectResult<spListarFuncion_Result> spListarFuncion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarFuncion_Result>("spListarFuncion");
        }
    
        public virtual ObjectResult<spListarGrupoFuncional_Result> spListarGrupoFuncional(Nullable<int> idDivisionFuncional)
        {
            var idDivisionFuncionalParameter = idDivisionFuncional.HasValue ?
                new ObjectParameter("idDivisionFuncional", idDivisionFuncional) :
                new ObjectParameter("idDivisionFuncional", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarGrupoFuncional_Result>("spListarGrupoFuncional", idDivisionFuncionalParameter);
        }
    
        public virtual ObjectResult<spListarMaestroAportacionesEmpleador_Result> spListarMaestroAportacionesEmpleador()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarMaestroAportacionesEmpleador_Result>("spListarMaestroAportacionesEmpleador");
        }
    
        public virtual ObjectResult<spListarMaestroAportacionesTrabajador_Result> spListarMaestroAportacionesTrabajador()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarMaestroAportacionesTrabajador_Result>("spListarMaestroAportacionesTrabajador");
        }
    
        public virtual ObjectResult<spListarMaestroDescuentos_Result> spListarMaestroDescuentos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarMaestroDescuentos_Result>("spListarMaestroDescuentos");
        }
    
        public virtual ObjectResult<spListarMaestroIngresos_Result> spListarMaestroIngresos(string ptipo)
        {
            var ptipoParameter = ptipo != null ?
                new ObjectParameter("ptipo", ptipo) :
                new ObjectParameter("ptipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarMaestroIngresos_Result>("spListarMaestroIngresos", ptipoParameter);
        }
    
        public virtual ObjectResult<spListarMetaJornal_Result> spListarMetaJornal(Nullable<int> pidtmeta)
        {
            var pidtmetaParameter = pidtmeta.HasValue ?
                new ObjectParameter("pidtmeta", pidtmeta) :
                new ObjectParameter("pidtmeta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarMetaJornal_Result>("spListarMetaJornal", pidtmetaParameter);
        }
    
        public virtual ObjectResult<spListarMetas_Result> spListarMetas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarMetas_Result>("spListarMetas");
        }
    
        public virtual ObjectResult<spListarNacionalidades_Result> spListarNacionalidades()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarNacionalidades_Result>("spListarNacionalidades");
        }
    
        public virtual ObjectResult<spListarOcupacion_Result> spListarOcupacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarOcupacion_Result>("spListarOcupacion");
        }
    
        public virtual int spListarPeriodoTipoTrabajador(Nullable<int> codigoTrabajador)
        {
            var codigoTrabajadorParameter = codigoTrabajador.HasValue ?
                new ObjectParameter("codigoTrabajador", codigoTrabajador) :
                new ObjectParameter("codigoTrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spListarPeriodoTipoTrabajador", codigoTrabajadorParameter);
        }
    
        public virtual ObjectResult<spListarPeriodoTrabajador_Result> spListarPeriodoTrabajador(Nullable<int> pidttrabajador)
        {
            var pidttrabajadorParameter = pidttrabajador.HasValue ?
                new ObjectParameter("pidttrabajador", pidttrabajador) :
                new ObjectParameter("pidttrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarPeriodoTrabajador_Result>("spListarPeriodoTrabajador", pidttrabajadorParameter);
        }
    
        public virtual ObjectResult<spListarPlanilla_Result> spListarPlanilla(Nullable<int> pidtregimenlaboral)
        {
            var pidtregimenlaboralParameter = pidtregimenlaboral.HasValue ?
                new ObjectParameter("pidtregimenlaboral", pidtregimenlaboral) :
                new ObjectParameter("pidtregimenlaboral", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarPlanilla_Result>("spListarPlanilla", pidtregimenlaboralParameter);
        }
    
        public virtual ObjectResult<spListarPlantillaPlanilla_Result> spListarPlantillaPlanilla(Nullable<int> pidtregimenlaboral)
        {
            var pidtregimenlaboralParameter = pidtregimenlaboral.HasValue ?
                new ObjectParameter("pidtregimenlaboral", pidtregimenlaboral) :
                new ObjectParameter("pidtregimenlaboral", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarPlantillaPlanilla_Result>("spListarPlantillaPlanilla", pidtregimenlaboralParameter);
        }
    
        public virtual ObjectResult<spListarProductoProyecto_Result> spListarProductoProyecto(Nullable<int> idprogramapresupuestal)
        {
            var idprogramapresupuestalParameter = idprogramapresupuestal.HasValue ?
                new ObjectParameter("idprogramapresupuestal", idprogramapresupuestal) :
                new ObjectParameter("idprogramapresupuestal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarProductoProyecto_Result>("spListarProductoProyecto", idprogramapresupuestalParameter);
        }
    
        public virtual ObjectResult<spListarProgramaPresupuestal_Result> spListarProgramaPresupuestal(Nullable<int> idtprogramapresupuestal)
        {
            var idtprogramapresupuestalParameter = idtprogramapresupuestal.HasValue ?
                new ObjectParameter("idtprogramapresupuestal", idtprogramapresupuestal) :
                new ObjectParameter("idtprogramapresupuestal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarProgramaPresupuestal_Result>("spListarProgramaPresupuestal", idtprogramapresupuestalParameter);
        }
    
        public virtual ObjectResult<spListarProvincias_Result> spListarProvincias(Nullable<int> coddepartamento)
        {
            var coddepartamentoParameter = coddepartamento.HasValue ?
                new ObjectParameter("coddepartamento", coddepartamento) :
                new ObjectParameter("coddepartamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarProvincias_Result>("spListarProvincias", coddepartamentoParameter);
        }
    
        public virtual ObjectResult<spListarRegimenLaboral_Result> spListarRegimenLaboral()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarRegimenLaboral_Result>("spListarRegimenLaboral");
        }
    
        public virtual ObjectResult<spListarRegimenPensionarioTrabajador_Result> spListarRegimenPensionarioTrabajador(Nullable<int> pidtperiodotrabajador)
        {
            var pidtperiodotrabajadorParameter = pidtperiodotrabajador.HasValue ?
                new ObjectParameter("pidtperiodotrabajador", pidtperiodotrabajador) :
                new ObjectParameter("pidtperiodotrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarRegimenPensionarioTrabajador_Result>("spListarRegimenPensionarioTrabajador", pidtperiodotrabajadorParameter);
        }
    
        public virtual ObjectResult<spListarRegimenSaludTrabajador_Result> spListarRegimenSaludTrabajador(Nullable<int> pidtperiodotrabajador)
        {
            var pidtperiodotrabajadorParameter = pidtperiodotrabajador.HasValue ?
                new ObjectParameter("pidtperiodotrabajador", pidtperiodotrabajador) :
                new ObjectParameter("pidtperiodotrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarRegimenSaludTrabajador_Result>("spListarRegimenSaludTrabajador", pidtperiodotrabajadorParameter);
        }
    
        public virtual ObjectResult<spListarRegimenTrabajador_Result> spListarRegimenTrabajador(Nullable<int> pidtperiodotrabajador)
        {
            var pidtperiodotrabajadorParameter = pidtperiodotrabajador.HasValue ?
                new ObjectParameter("pidtperiodotrabajador", pidtperiodotrabajador) :
                new ObjectParameter("pidtperiodotrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarRegimenTrabajador_Result>("spListarRegimenTrabajador", pidtperiodotrabajadorParameter);
        }
    
        public virtual ObjectResult<spListarResidenteMeta_Result> spListarResidenteMeta(Nullable<int> pidttrabajador)
        {
            var pidttrabajadorParameter = pidttrabajador.HasValue ?
                new ObjectParameter("pidttrabajador", pidttrabajador) :
                new ObjectParameter("pidttrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarResidenteMeta_Result>("spListarResidenteMeta", pidttrabajadorParameter);
        }
    
        public virtual ObjectResult<spListarSistemasPension_Result> spListarSistemasPension(string tipo)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarSistemasPension_Result>("spListarSistemasPension", tipoParameter);
        }
    
        public virtual ObjectResult<spListarTareo_Result> spListarTareo(Nullable<int> pidtmeta)
        {
            var pidtmetaParameter = pidtmeta.HasValue ?
                new ObjectParameter("pidtmeta", pidtmeta) :
                new ObjectParameter("pidtmeta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarTareo_Result>("spListarTareo", pidtmetaParameter);
        }
    
        public virtual int spListarTareos(Nullable<int> idMeta, Nullable<int> idResidente)
        {
            var idMetaParameter = idMeta.HasValue ?
                new ObjectParameter("idMeta", idMeta) :
                new ObjectParameter("idMeta", typeof(int));
    
            var idResidenteParameter = idResidente.HasValue ?
                new ObjectParameter("idResidente", idResidente) :
                new ObjectParameter("idResidente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spListarTareos", idMetaParameter, idResidenteParameter);
        }
    
        public virtual ObjectResult<spListarTipoContrato_Result> spListarTipoContrato()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarTipoContrato_Result>("spListarTipoContrato");
        }
    
        public virtual ObjectResult<spListarTiposVia_Result> spListarTiposVia()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarTiposVia_Result>("spListarTiposVia");
        }
    
        public virtual ObjectResult<spListarTiposZona_Result> spListarTiposZona()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarTiposZona_Result>("spListarTiposZona");
        }
    
        public virtual ObjectResult<spListarTrabajadores_Result> spListarTrabajadores(Nullable<sbyte> activo)
        {
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(sbyte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarTrabajadores_Result>("spListarTrabajadores", activoParameter);
        }
    
        public virtual ObjectResult<spListarVariables_Result> spListarVariables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarVariables_Result>("spListarVariables");
        }
    
        public virtual ObjectResult<spListaTiposVia_Result> spListaTiposVia()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaTiposVia_Result>("spListaTiposVia");
        }
    
        public virtual int spModificarActividadObra(Nullable<int> idtactividadobra, string nombre, string actividadobra, Nullable<int> año, Nullable<int> idproductoproyecto)
        {
            var idtactividadobraParameter = idtactividadobra.HasValue ?
                new ObjectParameter("idtactividadobra", idtactividadobra) :
                new ObjectParameter("idtactividadobra", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var actividadobraParameter = actividadobra != null ?
                new ObjectParameter("actividadobra", actividadobra) :
                new ObjectParameter("actividadobra", typeof(string));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var idproductoproyectoParameter = idproductoproyecto.HasValue ?
                new ObjectParameter("idproductoproyecto", idproductoproyecto) :
                new ObjectParameter("idproductoproyecto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarActividadObra", idtactividadobraParameter, nombreParameter, actividadobraParameter, añoParameter, idproductoproyectoParameter);
        }
    
        public virtual int spModificarCargo(Nullable<int> idtcargo, string descripcion)
        {
            var idtcargoParameter = idtcargo.HasValue ?
                new ObjectParameter("idtcargo", idtcargo) :
                new ObjectParameter("idtcargo", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarCargo", idtcargoParameter, descripcionParameter);
        }
    
        public virtual int spModificarCategoriaOcupacional(Nullable<int> pidtcategoriaocupacional, string pcodigo, string pdescripcion)
        {
            var pidtcategoriaocupacionalParameter = pidtcategoriaocupacional.HasValue ?
                new ObjectParameter("pidtcategoriaocupacional", pidtcategoriaocupacional) :
                new ObjectParameter("pidtcategoriaocupacional", typeof(int));
    
            var pcodigoParameter = pcodigo != null ?
                new ObjectParameter("pcodigo", pcodigo) :
                new ObjectParameter("pcodigo", typeof(string));
    
            var pdescripcionParameter = pdescripcion != null ?
                new ObjectParameter("pdescripcion", pdescripcion) :
                new ObjectParameter("pdescripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarCategoriaOcupacional", pidtcategoriaocupacionalParameter, pcodigoParameter, pdescripcionParameter);
        }
    
        public virtual int spModificarContrato(Nullable<int> idtContrato, Nullable<int> idtTrabajador, Nullable<int> idtsunattipotrabajador, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal, Nullable<int> numero, Nullable<int> idtmeta)
        {
            var idtContratoParameter = idtContrato.HasValue ?
                new ObjectParameter("idtContrato", idtContrato) :
                new ObjectParameter("idtContrato", typeof(int));
    
            var idtTrabajadorParameter = idtTrabajador.HasValue ?
                new ObjectParameter("idtTrabajador", idtTrabajador) :
                new ObjectParameter("idtTrabajador", typeof(int));
    
            var idtsunattipotrabajadorParameter = idtsunattipotrabajador.HasValue ?
                new ObjectParameter("idtsunattipotrabajador", idtsunattipotrabajador) :
                new ObjectParameter("idtsunattipotrabajador", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("fechaFinal", fechaFinal) :
                new ObjectParameter("fechaFinal", typeof(System.DateTime));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            var idtmetaParameter = idtmeta.HasValue ?
                new ObjectParameter("idtmeta", idtmeta) :
                new ObjectParameter("idtmeta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarContrato", idtContratoParameter, idtTrabajadorParameter, idtsunattipotrabajadorParameter, fechaInicioParameter, fechaFinalParameter, numeroParameter, idtmetaParameter);
        }
    
        public virtual int spModificarDetallePlanilla(Nullable<int> pidtdetalleplanilla, Nullable<decimal> psueldo, Nullable<System.DateTime> pfechainicio, Nullable<int> pdiaslaborados, Nullable<int> pidtcargo, Nullable<int> pidttrabajador, Nullable<int> pidtplanilla)
        {
            var pidtdetalleplanillaParameter = pidtdetalleplanilla.HasValue ?
                new ObjectParameter("pidtdetalleplanilla", pidtdetalleplanilla) :
                new ObjectParameter("pidtdetalleplanilla", typeof(int));
    
            var psueldoParameter = psueldo.HasValue ?
                new ObjectParameter("psueldo", psueldo) :
                new ObjectParameter("psueldo", typeof(decimal));
    
            var pfechainicioParameter = pfechainicio.HasValue ?
                new ObjectParameter("pfechainicio", pfechainicio) :
                new ObjectParameter("pfechainicio", typeof(System.DateTime));
    
            var pdiaslaboradosParameter = pdiaslaborados.HasValue ?
                new ObjectParameter("pdiaslaborados", pdiaslaborados) :
                new ObjectParameter("pdiaslaborados", typeof(int));
    
            var pidtcargoParameter = pidtcargo.HasValue ?
                new ObjectParameter("pidtcargo", pidtcargo) :
                new ObjectParameter("pidtcargo", typeof(int));
    
            var pidttrabajadorParameter = pidttrabajador.HasValue ?
                new ObjectParameter("pidttrabajador", pidttrabajador) :
                new ObjectParameter("pidttrabajador", typeof(int));
    
            var pidtplanillaParameter = pidtplanilla.HasValue ?
                new ObjectParameter("pidtplanilla", pidtplanilla) :
                new ObjectParameter("pidtplanilla", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarDetallePlanilla", pidtdetalleplanillaParameter, psueldoParameter, pfechainicioParameter, pdiaslaboradosParameter, pidtcargoParameter, pidttrabajadorParameter, pidtplanillaParameter);
        }
    
        public virtual int spModificarDetalleTareo(Nullable<int> pidtdetalletareo, string pcategoria, string pdiastareo, Nullable<int> pidttrabajador, Nullable<int> pidttareo)
        {
            var pidtdetalletareoParameter = pidtdetalletareo.HasValue ?
                new ObjectParameter("pidtdetalletareo", pidtdetalletareo) :
                new ObjectParameter("pidtdetalletareo", typeof(int));
    
            var pcategoriaParameter = pcategoria != null ?
                new ObjectParameter("pcategoria", pcategoria) :
                new ObjectParameter("pcategoria", typeof(string));
    
            var pdiastareoParameter = pdiastareo != null ?
                new ObjectParameter("pdiastareo", pdiastareo) :
                new ObjectParameter("pdiastareo", typeof(string));
    
            var pidttrabajadorParameter = pidttrabajador.HasValue ?
                new ObjectParameter("pidttrabajador", pidttrabajador) :
                new ObjectParameter("pidttrabajador", typeof(int));
    
            var pidttareoParameter = pidttareo.HasValue ?
                new ObjectParameter("pidttareo", pidttareo) :
                new ObjectParameter("pidttareo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarDetalleTareo", pidtdetalletareoParameter, pcategoriaParameter, pdiastareoParameter, pidttrabajadorParameter, pidttareoParameter);
        }
    
        public virtual int spModificarDiasTareo(Nullable<int> pidtdiastareo, Nullable<System.DateTime> pfecha, Nullable<bool> pestado, Nullable<int> pidtdetalletareo)
        {
            var pidtdiastareoParameter = pidtdiastareo.HasValue ?
                new ObjectParameter("pidtdiastareo", pidtdiastareo) :
                new ObjectParameter("pidtdiastareo", typeof(int));
    
            var pfechaParameter = pfecha.HasValue ?
                new ObjectParameter("pfecha", pfecha) :
                new ObjectParameter("pfecha", typeof(System.DateTime));
    
            var pestadoParameter = pestado.HasValue ?
                new ObjectParameter("pestado", pestado) :
                new ObjectParameter("pestado", typeof(bool));
    
            var pidtdetalletareoParameter = pidtdetalletareo.HasValue ?
                new ObjectParameter("pidtdetalletareo", pidtdetalletareo) :
                new ObjectParameter("pidtdetalletareo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarDiasTareo", pidtdiastareoParameter, pfechaParameter, pestadoParameter, pidtdetalletareoParameter);
        }
    
        public virtual int spModificarDivisionFuncional(Nullable<int> idtdivisionfuncional, string nombre, Nullable<int> divisionfuncional, Nullable<int> año, Nullable<int> idFuncion)
        {
            var idtdivisionfuncionalParameter = idtdivisionfuncional.HasValue ?
                new ObjectParameter("idtdivisionfuncional", idtdivisionfuncional) :
                new ObjectParameter("idtdivisionfuncional", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var divisionfuncionalParameter = divisionfuncional.HasValue ?
                new ObjectParameter("divisionfuncional", divisionfuncional) :
                new ObjectParameter("divisionfuncional", typeof(int));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var idFuncionParameter = idFuncion.HasValue ?
                new ObjectParameter("idFuncion", idFuncion) :
                new ObjectParameter("idFuncion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarDivisionFuncional", idtdivisionfuncionalParameter, nombreParameter, divisionfuncionalParameter, añoParameter, idFuncionParameter);
        }
    
        public virtual int spModificarFuenteFinanciamiento(Nullable<int> pidtfuentefinanciamiento, string pcodigo, string pdescripcion)
        {
            var pidtfuentefinanciamientoParameter = pidtfuentefinanciamiento.HasValue ?
                new ObjectParameter("pidtfuentefinanciamiento", pidtfuentefinanciamiento) :
                new ObjectParameter("pidtfuentefinanciamiento", typeof(int));
    
            var pcodigoParameter = pcodigo != null ?
                new ObjectParameter("pcodigo", pcodigo) :
                new ObjectParameter("pcodigo", typeof(string));
    
            var pdescripcionParameter = pdescripcion != null ?
                new ObjectParameter("pdescripcion", pdescripcion) :
                new ObjectParameter("pdescripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarFuenteFinanciamiento", pidtfuentefinanciamientoParameter, pcodigoParameter, pdescripcionParameter);
        }
    
        public virtual int spModificarFuncion(Nullable<int> idtFuncion, string nombre, string funcion, Nullable<int> año)
        {
            var idtFuncionParameter = idtFuncion.HasValue ?
                new ObjectParameter("idtFuncion", idtFuncion) :
                new ObjectParameter("idtFuncion", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var funcionParameter = funcion != null ?
                new ObjectParameter("funcion", funcion) :
                new ObjectParameter("funcion", typeof(string));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarFuncion", idtFuncionParameter, nombreParameter, funcionParameter, añoParameter);
        }
    
        public virtual int spModificarGrupoFuncional(Nullable<int> idtgrupofuncional, string nombre, string grupoFuncional, Nullable<int> año, Nullable<int> idDivisionFuncional)
        {
            var idtgrupofuncionalParameter = idtgrupofuncional.HasValue ?
                new ObjectParameter("idtgrupofuncional", idtgrupofuncional) :
                new ObjectParameter("idtgrupofuncional", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var grupoFuncionalParameter = grupoFuncional != null ?
                new ObjectParameter("grupoFuncional", grupoFuncional) :
                new ObjectParameter("grupoFuncional", typeof(string));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var idDivisionFuncionalParameter = idDivisionFuncional.HasValue ?
                new ObjectParameter("idDivisionFuncional", idDivisionFuncional) :
                new ObjectParameter("idDivisionFuncional", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarGrupoFuncional", idtgrupofuncionalParameter, nombreParameter, grupoFuncionalParameter, añoParameter, idDivisionFuncionalParameter);
        }
    
        public virtual int spModificarMaestroAportacionesEmpleador(Nullable<int> pidtmaestroaportacionesempleador, string pcodigo, string pdescripcion, string pcalculo, string pabreviacion)
        {
            var pidtmaestroaportacionesempleadorParameter = pidtmaestroaportacionesempleador.HasValue ?
                new ObjectParameter("pidtmaestroaportacionesempleador", pidtmaestroaportacionesempleador) :
                new ObjectParameter("pidtmaestroaportacionesempleador", typeof(int));
    
            var pcodigoParameter = pcodigo != null ?
                new ObjectParameter("pcodigo", pcodigo) :
                new ObjectParameter("pcodigo", typeof(string));
    
            var pdescripcionParameter = pdescripcion != null ?
                new ObjectParameter("pdescripcion", pdescripcion) :
                new ObjectParameter("pdescripcion", typeof(string));
    
            var pcalculoParameter = pcalculo != null ?
                new ObjectParameter("pcalculo", pcalculo) :
                new ObjectParameter("pcalculo", typeof(string));
    
            var pabreviacionParameter = pabreviacion != null ?
                new ObjectParameter("pabreviacion", pabreviacion) :
                new ObjectParameter("pabreviacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarMaestroAportacionesEmpleador", pidtmaestroaportacionesempleadorParameter, pcodigoParameter, pdescripcionParameter, pcalculoParameter, pabreviacionParameter);
        }
    
        public virtual int spModificarMaestroAportacionesTrabajador(Nullable<int> pidtmaestroaportacionestrabajador, string pcodigo, string pdescripcion, string pcalculo, string pabreviacion)
        {
            var pidtmaestroaportacionestrabajadorParameter = pidtmaestroaportacionestrabajador.HasValue ?
                new ObjectParameter("pidtmaestroaportacionestrabajador", pidtmaestroaportacionestrabajador) :
                new ObjectParameter("pidtmaestroaportacionestrabajador", typeof(int));
    
            var pcodigoParameter = pcodigo != null ?
                new ObjectParameter("pcodigo", pcodigo) :
                new ObjectParameter("pcodigo", typeof(string));
    
            var pdescripcionParameter = pdescripcion != null ?
                new ObjectParameter("pdescripcion", pdescripcion) :
                new ObjectParameter("pdescripcion", typeof(string));
    
            var pcalculoParameter = pcalculo != null ?
                new ObjectParameter("pcalculo", pcalculo) :
                new ObjectParameter("pcalculo", typeof(string));
    
            var pabreviacionParameter = pabreviacion != null ?
                new ObjectParameter("pabreviacion", pabreviacion) :
                new ObjectParameter("pabreviacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarMaestroAportacionesTrabajador", pidtmaestroaportacionestrabajadorParameter, pcodigoParameter, pdescripcionParameter, pcalculoParameter, pabreviacionParameter);
        }
    
        public virtual int spModificarMaestroDescuentos(Nullable<int> pidtmaestrodescuentos, string pcodigo, string pdescripcion, string pcalculo, string pabreviacion)
        {
            var pidtmaestrodescuentosParameter = pidtmaestrodescuentos.HasValue ?
                new ObjectParameter("pidtmaestrodescuentos", pidtmaestrodescuentos) :
                new ObjectParameter("pidtmaestrodescuentos", typeof(int));
    
            var pcodigoParameter = pcodigo != null ?
                new ObjectParameter("pcodigo", pcodigo) :
                new ObjectParameter("pcodigo", typeof(string));
    
            var pdescripcionParameter = pdescripcion != null ?
                new ObjectParameter("pdescripcion", pdescripcion) :
                new ObjectParameter("pdescripcion", typeof(string));
    
            var pcalculoParameter = pcalculo != null ?
                new ObjectParameter("pcalculo", pcalculo) :
                new ObjectParameter("pcalculo", typeof(string));
    
            var pabreviacionParameter = pabreviacion != null ?
                new ObjectParameter("pabreviacion", pabreviacion) :
                new ObjectParameter("pabreviacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarMaestroDescuentos", pidtmaestrodescuentosParameter, pcodigoParameter, pdescripcionParameter, pcalculoParameter, pabreviacionParameter);
        }
    
        public virtual int spModificarMaestroIngresos(Nullable<int> pidtmaestroingresos, string pcodigo, string pdescripcion, Nullable<bool> pessalud_trabajador, Nullable<bool> pessalud_cbssp, Nullable<bool> pessalud_agrario, Nullable<bool> pessalud_sctr, Nullable<bool> pimpuesto_extraord, Nullable<bool> pderechos_sociales, Nullable<bool> psenati, Nullable<bool> psnp, Nullable<bool> pspp, Nullable<bool> prenta_5ta, Nullable<bool> pessalud_pensionista, Nullable<bool> pcontrib_solidaria, string pcalculo, string pabreviacion, string ptipo)
        {
            var pidtmaestroingresosParameter = pidtmaestroingresos.HasValue ?
                new ObjectParameter("pidtmaestroingresos", pidtmaestroingresos) :
                new ObjectParameter("pidtmaestroingresos", typeof(int));
    
            var pcodigoParameter = pcodigo != null ?
                new ObjectParameter("pcodigo", pcodigo) :
                new ObjectParameter("pcodigo", typeof(string));
    
            var pdescripcionParameter = pdescripcion != null ?
                new ObjectParameter("pdescripcion", pdescripcion) :
                new ObjectParameter("pdescripcion", typeof(string));
    
            var pessalud_trabajadorParameter = pessalud_trabajador.HasValue ?
                new ObjectParameter("pessalud_trabajador", pessalud_trabajador) :
                new ObjectParameter("pessalud_trabajador", typeof(bool));
    
            var pessalud_cbsspParameter = pessalud_cbssp.HasValue ?
                new ObjectParameter("pessalud_cbssp", pessalud_cbssp) :
                new ObjectParameter("pessalud_cbssp", typeof(bool));
    
            var pessalud_agrarioParameter = pessalud_agrario.HasValue ?
                new ObjectParameter("pessalud_agrario", pessalud_agrario) :
                new ObjectParameter("pessalud_agrario", typeof(bool));
    
            var pessalud_sctrParameter = pessalud_sctr.HasValue ?
                new ObjectParameter("pessalud_sctr", pessalud_sctr) :
                new ObjectParameter("pessalud_sctr", typeof(bool));
    
            var pimpuesto_extraordParameter = pimpuesto_extraord.HasValue ?
                new ObjectParameter("pimpuesto_extraord", pimpuesto_extraord) :
                new ObjectParameter("pimpuesto_extraord", typeof(bool));
    
            var pderechos_socialesParameter = pderechos_sociales.HasValue ?
                new ObjectParameter("pderechos_sociales", pderechos_sociales) :
                new ObjectParameter("pderechos_sociales", typeof(bool));
    
            var psenatiParameter = psenati.HasValue ?
                new ObjectParameter("psenati", psenati) :
                new ObjectParameter("psenati", typeof(bool));
    
            var psnpParameter = psnp.HasValue ?
                new ObjectParameter("psnp", psnp) :
                new ObjectParameter("psnp", typeof(bool));
    
            var psppParameter = pspp.HasValue ?
                new ObjectParameter("pspp", pspp) :
                new ObjectParameter("pspp", typeof(bool));
    
            var prenta_5taParameter = prenta_5ta.HasValue ?
                new ObjectParameter("prenta_5ta", prenta_5ta) :
                new ObjectParameter("prenta_5ta", typeof(bool));
    
            var pessalud_pensionistaParameter = pessalud_pensionista.HasValue ?
                new ObjectParameter("pessalud_pensionista", pessalud_pensionista) :
                new ObjectParameter("pessalud_pensionista", typeof(bool));
    
            var pcontrib_solidariaParameter = pcontrib_solidaria.HasValue ?
                new ObjectParameter("pcontrib_solidaria", pcontrib_solidaria) :
                new ObjectParameter("pcontrib_solidaria", typeof(bool));
    
            var pcalculoParameter = pcalculo != null ?
                new ObjectParameter("pcalculo", pcalculo) :
                new ObjectParameter("pcalculo", typeof(string));
    
            var pabreviacionParameter = pabreviacion != null ?
                new ObjectParameter("pabreviacion", pabreviacion) :
                new ObjectParameter("pabreviacion", typeof(string));
    
            var ptipoParameter = ptipo != null ?
                new ObjectParameter("ptipo", ptipo) :
                new ObjectParameter("ptipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarMaestroIngresos", pidtmaestroingresosParameter, pcodigoParameter, pdescripcionParameter, pessalud_trabajadorParameter, pessalud_cbsspParameter, pessalud_agrarioParameter, pessalud_sctrParameter, pimpuesto_extraordParameter, pderechos_socialesParameter, psenatiParameter, psnpParameter, psppParameter, prenta_5taParameter, pessalud_pensionistaParameter, pcontrib_solidariaParameter, pcalculoParameter, pabreviacionParameter, ptipoParameter);
        }
    
        public virtual int spModificarMeta(Nullable<int> idmeta, Nullable<int> año, string nombre, Nullable<int> numero, Nullable<int> idGrupoFuncional, Nullable<int> idActividadObra)
        {
            var idmetaParameter = idmeta.HasValue ?
                new ObjectParameter("idmeta", idmeta) :
                new ObjectParameter("idmeta", typeof(int));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            var idGrupoFuncionalParameter = idGrupoFuncional.HasValue ?
                new ObjectParameter("idGrupoFuncional", idGrupoFuncional) :
                new ObjectParameter("idGrupoFuncional", typeof(int));
    
            var idActividadObraParameter = idActividadObra.HasValue ?
                new ObjectParameter("idActividadObra", idActividadObra) :
                new ObjectParameter("idActividadObra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarMeta", idmetaParameter, añoParameter, nombreParameter, numeroParameter, idGrupoFuncionalParameter, idActividadObraParameter);
        }
    
        public virtual int spModificarMetaJornal(Nullable<int> pidtmetajornal, string pcategoria, Nullable<int> pjornal, Nullable<int> pidtmeta)
        {
            var pidtmetajornalParameter = pidtmetajornal.HasValue ?
                new ObjectParameter("pidtmetajornal", pidtmetajornal) :
                new ObjectParameter("pidtmetajornal", typeof(int));
    
            var pcategoriaParameter = pcategoria != null ?
                new ObjectParameter("pcategoria", pcategoria) :
                new ObjectParameter("pcategoria", typeof(string));
    
            var pjornalParameter = pjornal.HasValue ?
                new ObjectParameter("pjornal", pjornal) :
                new ObjectParameter("pjornal", typeof(int));
    
            var pidtmetaParameter = pidtmeta.HasValue ?
                new ObjectParameter("pidtmeta", pidtmeta) :
                new ObjectParameter("pidtmeta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarMetaJornal", pidtmetajornalParameter, pcategoriaParameter, pjornalParameter, pidtmetaParameter);
        }
    
        public virtual int spModificarOcupacion(Nullable<int> pidtocupacion, string pcodigo, string pdescripcion)
        {
            var pidtocupacionParameter = pidtocupacion.HasValue ?
                new ObjectParameter("pidtocupacion", pidtocupacion) :
                new ObjectParameter("pidtocupacion", typeof(int));
    
            var pcodigoParameter = pcodigo != null ?
                new ObjectParameter("pcodigo", pcodigo) :
                new ObjectParameter("pcodigo", typeof(string));
    
            var pdescripcionParameter = pdescripcion != null ?
                new ObjectParameter("pdescripcion", pdescripcion) :
                new ObjectParameter("pdescripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarOcupacion", pidtocupacionParameter, pcodigoParameter, pdescripcionParameter);
        }
    
        public virtual int spModificarPeriodo(Nullable<int> idtPeriodo, Nullable<int> idtTrabajador, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> idtMotivoFinPeriodo)
        {
            var idtPeriodoParameter = idtPeriodo.HasValue ?
                new ObjectParameter("idtPeriodo", idtPeriodo) :
                new ObjectParameter("idtPeriodo", typeof(int));
    
            var idtTrabajadorParameter = idtTrabajador.HasValue ?
                new ObjectParameter("idtTrabajador", idtTrabajador) :
                new ObjectParameter("idtTrabajador", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var idtMotivoFinPeriodoParameter = idtMotivoFinPeriodo.HasValue ?
                new ObjectParameter("idtMotivoFinPeriodo", idtMotivoFinPeriodo) :
                new ObjectParameter("idtMotivoFinPeriodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarPeriodo", idtPeriodoParameter, idtTrabajadorParameter, fechaInicioParameter, fechaFinParameter, idtMotivoFinPeriodoParameter);
        }
    
        public virtual int spModificarPeriodoTipoTrabajador(Nullable<int> idtperiodotipotrabajador, Nullable<int> idttrabajador, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechafin, Nullable<int> idtsunattipotrabajador)
        {
            var idtperiodotipotrabajadorParameter = idtperiodotipotrabajador.HasValue ?
                new ObjectParameter("idtperiodotipotrabajador", idtperiodotipotrabajador) :
                new ObjectParameter("idtperiodotipotrabajador", typeof(int));
    
            var idttrabajadorParameter = idttrabajador.HasValue ?
                new ObjectParameter("idttrabajador", idttrabajador) :
                new ObjectParameter("idttrabajador", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechafinParameter = fechafin.HasValue ?
                new ObjectParameter("fechafin", fechafin) :
                new ObjectParameter("fechafin", typeof(System.DateTime));
    
            var idtsunattipotrabajadorParameter = idtsunattipotrabajador.HasValue ?
                new ObjectParameter("idtsunattipotrabajador", idtsunattipotrabajador) :
                new ObjectParameter("idtsunattipotrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarPeriodoTipoTrabajador", idtperiodotipotrabajadorParameter, idttrabajadorParameter, fechaInicioParameter, fechafinParameter, idtsunattipotrabajadorParameter);
        }
    
        public virtual int spModificarPeriodoTrabajador(Nullable<int> pidtperiodotrabajador, string pfechainicio, string pfechafin, Nullable<int> pidtmotivofinperiodo, Nullable<int> pidttrabajador)
        {
            var pidtperiodotrabajadorParameter = pidtperiodotrabajador.HasValue ?
                new ObjectParameter("pidtperiodotrabajador", pidtperiodotrabajador) :
                new ObjectParameter("pidtperiodotrabajador", typeof(int));
    
            var pfechainicioParameter = pfechainicio != null ?
                new ObjectParameter("pfechainicio", pfechainicio) :
                new ObjectParameter("pfechainicio", typeof(string));
    
            var pfechafinParameter = pfechafin != null ?
                new ObjectParameter("pfechafin", pfechafin) :
                new ObjectParameter("pfechafin", typeof(string));
    
            var pidtmotivofinperiodoParameter = pidtmotivofinperiodo.HasValue ?
                new ObjectParameter("pidtmotivofinperiodo", pidtmotivofinperiodo) :
                new ObjectParameter("pidtmotivofinperiodo", typeof(int));
    
            var pidttrabajadorParameter = pidttrabajador.HasValue ?
                new ObjectParameter("pidttrabajador", pidttrabajador) :
                new ObjectParameter("pidttrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarPeriodoTrabajador", pidtperiodotrabajadorParameter, pfechainicioParameter, pfechafinParameter, pidtmotivofinperiodoParameter, pidttrabajadorParameter);
        }
    
        public virtual int spModificarPlanilla(Nullable<int> pidtplanilla, string pnumero, string pmes, string paño, Nullable<System.DateTime> pfecha, Nullable<int> pidtmeta, Nullable<int> pidtfuentefinanciamiento, Nullable<int> pidtregimenlaboral)
        {
            var pidtplanillaParameter = pidtplanilla.HasValue ?
                new ObjectParameter("pidtplanilla", pidtplanilla) :
                new ObjectParameter("pidtplanilla", typeof(int));
    
            var pnumeroParameter = pnumero != null ?
                new ObjectParameter("pnumero", pnumero) :
                new ObjectParameter("pnumero", typeof(string));
    
            var pmesParameter = pmes != null ?
                new ObjectParameter("pmes", pmes) :
                new ObjectParameter("pmes", typeof(string));
    
            var pañoParameter = paño != null ?
                new ObjectParameter("paño", paño) :
                new ObjectParameter("paño", typeof(string));
    
            var pfechaParameter = pfecha.HasValue ?
                new ObjectParameter("pfecha", pfecha) :
                new ObjectParameter("pfecha", typeof(System.DateTime));
    
            var pidtmetaParameter = pidtmeta.HasValue ?
                new ObjectParameter("pidtmeta", pidtmeta) :
                new ObjectParameter("pidtmeta", typeof(int));
    
            var pidtfuentefinanciamientoParameter = pidtfuentefinanciamiento.HasValue ?
                new ObjectParameter("pidtfuentefinanciamiento", pidtfuentefinanciamiento) :
                new ObjectParameter("pidtfuentefinanciamiento", typeof(int));
    
            var pidtregimenlaboralParameter = pidtregimenlaboral.HasValue ?
                new ObjectParameter("pidtregimenlaboral", pidtregimenlaboral) :
                new ObjectParameter("pidtregimenlaboral", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarPlanilla", pidtplanillaParameter, pnumeroParameter, pmesParameter, pañoParameter, pfechaParameter, pidtmetaParameter, pidtfuentefinanciamientoParameter, pidtregimenlaboralParameter);
        }
    
        public virtual int spModificarPlantillaPlanilla(Nullable<int> pidtplantillaplanilla, string ptipo, Nullable<int> pcodigo, Nullable<int> pidtregimenlaboral)
        {
            var pidtplantillaplanillaParameter = pidtplantillaplanilla.HasValue ?
                new ObjectParameter("pidtplantillaplanilla", pidtplantillaplanilla) :
                new ObjectParameter("pidtplantillaplanilla", typeof(int));
    
            var ptipoParameter = ptipo != null ?
                new ObjectParameter("ptipo", ptipo) :
                new ObjectParameter("ptipo", typeof(string));
    
            var pcodigoParameter = pcodigo.HasValue ?
                new ObjectParameter("pcodigo", pcodigo) :
                new ObjectParameter("pcodigo", typeof(int));
    
            var pidtregimenlaboralParameter = pidtregimenlaboral.HasValue ?
                new ObjectParameter("pidtregimenlaboral", pidtregimenlaboral) :
                new ObjectParameter("pidtregimenlaboral", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarPlantillaPlanilla", pidtplantillaplanillaParameter, ptipoParameter, pcodigoParameter, pidtregimenlaboralParameter);
        }
    
        public virtual int spModificarProductoProyecto(Nullable<int> idtproductoproyecto, string nombre, string productoproyecto, Nullable<int> año, Nullable<int> idprogramapresupuestal)
        {
            var idtproductoproyectoParameter = idtproductoproyecto.HasValue ?
                new ObjectParameter("idtproductoproyecto", idtproductoproyecto) :
                new ObjectParameter("idtproductoproyecto", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var productoproyectoParameter = productoproyecto != null ?
                new ObjectParameter("productoproyecto", productoproyecto) :
                new ObjectParameter("productoproyecto", typeof(string));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var idprogramapresupuestalParameter = idprogramapresupuestal.HasValue ?
                new ObjectParameter("idprogramapresupuestal", idprogramapresupuestal) :
                new ObjectParameter("idprogramapresupuestal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarProductoProyecto", idtproductoproyectoParameter, nombreParameter, productoproyectoParameter, añoParameter, idprogramapresupuestalParameter);
        }
    
        public virtual int spModificarProgramaPresupuestal(Nullable<int> idtprogramapresupuestal, string nombre, string programapresupuestal, Nullable<int> año)
        {
            var idtprogramapresupuestalParameter = idtprogramapresupuestal.HasValue ?
                new ObjectParameter("idtprogramapresupuestal", idtprogramapresupuestal) :
                new ObjectParameter("idtprogramapresupuestal", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var programapresupuestalParameter = programapresupuestal != null ?
                new ObjectParameter("programapresupuestal", programapresupuestal) :
                new ObjectParameter("programapresupuestal", typeof(string));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarProgramaPresupuestal", idtprogramapresupuestalParameter, nombreParameter, programapresupuestalParameter, añoParameter);
        }
    
        public virtual int spModificarRegimenLaboral(Nullable<int> pidtregimenlaboral, string pcodigo, string pdescripcion)
        {
            var pidtregimenlaboralParameter = pidtregimenlaboral.HasValue ?
                new ObjectParameter("pidtregimenlaboral", pidtregimenlaboral) :
                new ObjectParameter("pidtregimenlaboral", typeof(int));
    
            var pcodigoParameter = pcodigo != null ?
                new ObjectParameter("pcodigo", pcodigo) :
                new ObjectParameter("pcodigo", typeof(string));
    
            var pdescripcionParameter = pdescripcion != null ?
                new ObjectParameter("pdescripcion", pdescripcion) :
                new ObjectParameter("pdescripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarRegimenLaboral", pidtregimenlaboralParameter, pcodigoParameter, pdescripcionParameter);
        }
    
        public virtual int spModificarRegimenPensionarioTrabajador(Nullable<int> pidtregimenpensionariotrabajador, string pfechainicio, string pfechafin, string pcuspp, string ptipocomision, Nullable<int> pidtafp, Nullable<int> pidtperiodotrabajador)
        {
            var pidtregimenpensionariotrabajadorParameter = pidtregimenpensionariotrabajador.HasValue ?
                new ObjectParameter("pidtregimenpensionariotrabajador", pidtregimenpensionariotrabajador) :
                new ObjectParameter("pidtregimenpensionariotrabajador", typeof(int));
    
            var pfechainicioParameter = pfechainicio != null ?
                new ObjectParameter("pfechainicio", pfechainicio) :
                new ObjectParameter("pfechainicio", typeof(string));
    
            var pfechafinParameter = pfechafin != null ?
                new ObjectParameter("pfechafin", pfechafin) :
                new ObjectParameter("pfechafin", typeof(string));
    
            var pcusppParameter = pcuspp != null ?
                new ObjectParameter("pcuspp", pcuspp) :
                new ObjectParameter("pcuspp", typeof(string));
    
            var ptipocomisionParameter = ptipocomision != null ?
                new ObjectParameter("ptipocomision", ptipocomision) :
                new ObjectParameter("ptipocomision", typeof(string));
    
            var pidtafpParameter = pidtafp.HasValue ?
                new ObjectParameter("pidtafp", pidtafp) :
                new ObjectParameter("pidtafp", typeof(int));
    
            var pidtperiodotrabajadorParameter = pidtperiodotrabajador.HasValue ?
                new ObjectParameter("pidtperiodotrabajador", pidtperiodotrabajador) :
                new ObjectParameter("pidtperiodotrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarRegimenPensionarioTrabajador", pidtregimenpensionariotrabajadorParameter, pfechainicioParameter, pfechafinParameter, pcusppParameter, ptipocomisionParameter, pidtafpParameter, pidtperiodotrabajadorParameter);
        }
    
        public virtual int spModificarRegimenSaludTrabajador(Nullable<int> pidtregimensaludtrabajador, string pregimensalud, string pfechainicio, string pfechafin, string pentidadprestadorasalud, Nullable<int> pidtperiodotrabajador)
        {
            var pidtregimensaludtrabajadorParameter = pidtregimensaludtrabajador.HasValue ?
                new ObjectParameter("pidtregimensaludtrabajador", pidtregimensaludtrabajador) :
                new ObjectParameter("pidtregimensaludtrabajador", typeof(int));
    
            var pregimensaludParameter = pregimensalud != null ?
                new ObjectParameter("pregimensalud", pregimensalud) :
                new ObjectParameter("pregimensalud", typeof(string));
    
            var pfechainicioParameter = pfechainicio != null ?
                new ObjectParameter("pfechainicio", pfechainicio) :
                new ObjectParameter("pfechainicio", typeof(string));
    
            var pfechafinParameter = pfechafin != null ?
                new ObjectParameter("pfechafin", pfechafin) :
                new ObjectParameter("pfechafin", typeof(string));
    
            var pentidadprestadorasaludParameter = pentidadprestadorasalud != null ?
                new ObjectParameter("pentidadprestadorasalud", pentidadprestadorasalud) :
                new ObjectParameter("pentidadprestadorasalud", typeof(string));
    
            var pidtperiodotrabajadorParameter = pidtperiodotrabajador.HasValue ?
                new ObjectParameter("pidtperiodotrabajador", pidtperiodotrabajador) :
                new ObjectParameter("pidtperiodotrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarRegimenSaludTrabajador", pidtregimensaludtrabajadorParameter, pregimensaludParameter, pfechainicioParameter, pfechafinParameter, pentidadprestadorasaludParameter, pidtperiodotrabajadorParameter);
        }
    
        public virtual int spModificarRegimenTrabajador(Nullable<int> pidtregimentrabajador, string pcondicion, Nullable<bool> pservidorconfianza, string pnumerodocumento, string pperiodicidad, string ptipopago, Nullable<decimal> pmontopago, string pfechainicio, string pfechafin, string pruc, Nullable<int> pidtregimenlaboral, Nullable<int> pidttipotrabajador, Nullable<int> pidttipocontrato, Nullable<int> pidtcategoriaocupacional, Nullable<int> pidtocupacion, Nullable<int> pidtcargo, Nullable<int> pidtmeta, Nullable<int> pidtperiodotrabajador)
        {
            var pidtregimentrabajadorParameter = pidtregimentrabajador.HasValue ?
                new ObjectParameter("pidtregimentrabajador", pidtregimentrabajador) :
                new ObjectParameter("pidtregimentrabajador", typeof(int));
    
            var pcondicionParameter = pcondicion != null ?
                new ObjectParameter("pcondicion", pcondicion) :
                new ObjectParameter("pcondicion", typeof(string));
    
            var pservidorconfianzaParameter = pservidorconfianza.HasValue ?
                new ObjectParameter("pservidorconfianza", pservidorconfianza) :
                new ObjectParameter("pservidorconfianza", typeof(bool));
    
            var pnumerodocumentoParameter = pnumerodocumento != null ?
                new ObjectParameter("pnumerodocumento", pnumerodocumento) :
                new ObjectParameter("pnumerodocumento", typeof(string));
    
            var pperiodicidadParameter = pperiodicidad != null ?
                new ObjectParameter("pperiodicidad", pperiodicidad) :
                new ObjectParameter("pperiodicidad", typeof(string));
    
            var ptipopagoParameter = ptipopago != null ?
                new ObjectParameter("ptipopago", ptipopago) :
                new ObjectParameter("ptipopago", typeof(string));
    
            var pmontopagoParameter = pmontopago.HasValue ?
                new ObjectParameter("pmontopago", pmontopago) :
                new ObjectParameter("pmontopago", typeof(decimal));
    
            var pfechainicioParameter = pfechainicio != null ?
                new ObjectParameter("pfechainicio", pfechainicio) :
                new ObjectParameter("pfechainicio", typeof(string));
    
            var pfechafinParameter = pfechafin != null ?
                new ObjectParameter("pfechafin", pfechafin) :
                new ObjectParameter("pfechafin", typeof(string));
    
            var prucParameter = pruc != null ?
                new ObjectParameter("pruc", pruc) :
                new ObjectParameter("pruc", typeof(string));
    
            var pidtregimenlaboralParameter = pidtregimenlaboral.HasValue ?
                new ObjectParameter("pidtregimenlaboral", pidtregimenlaboral) :
                new ObjectParameter("pidtregimenlaboral", typeof(int));
    
            var pidttipotrabajadorParameter = pidttipotrabajador.HasValue ?
                new ObjectParameter("pidttipotrabajador", pidttipotrabajador) :
                new ObjectParameter("pidttipotrabajador", typeof(int));
    
            var pidttipocontratoParameter = pidttipocontrato.HasValue ?
                new ObjectParameter("pidttipocontrato", pidttipocontrato) :
                new ObjectParameter("pidttipocontrato", typeof(int));
    
            var pidtcategoriaocupacionalParameter = pidtcategoriaocupacional.HasValue ?
                new ObjectParameter("pidtcategoriaocupacional", pidtcategoriaocupacional) :
                new ObjectParameter("pidtcategoriaocupacional", typeof(int));
    
            var pidtocupacionParameter = pidtocupacion.HasValue ?
                new ObjectParameter("pidtocupacion", pidtocupacion) :
                new ObjectParameter("pidtocupacion", typeof(int));
    
            var pidtcargoParameter = pidtcargo.HasValue ?
                new ObjectParameter("pidtcargo", pidtcargo) :
                new ObjectParameter("pidtcargo", typeof(int));
    
            var pidtmetaParameter = pidtmeta.HasValue ?
                new ObjectParameter("pidtmeta", pidtmeta) :
                new ObjectParameter("pidtmeta", typeof(int));
    
            var pidtperiodotrabajadorParameter = pidtperiodotrabajador.HasValue ?
                new ObjectParameter("pidtperiodotrabajador", pidtperiodotrabajador) :
                new ObjectParameter("pidtperiodotrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarRegimenTrabajador", pidtregimentrabajadorParameter, pcondicionParameter, pservidorconfianzaParameter, pnumerodocumentoParameter, pperiodicidadParameter, ptipopagoParameter, pmontopagoParameter, pfechainicioParameter, pfechafinParameter, prucParameter, pidtregimenlaboralParameter, pidttipotrabajadorParameter, pidttipocontratoParameter, pidtcategoriaocupacionalParameter, pidtocupacionParameter, pidtcargoParameter, pidtmetaParameter, pidtperiodotrabajadorParameter);
        }
    
        public virtual int spModificarResidenteMeta(Nullable<int> pidtresidentemeta, Nullable<int> pidtmeta, Nullable<int> pidttrabajador)
        {
            var pidtresidentemetaParameter = pidtresidentemeta.HasValue ?
                new ObjectParameter("pidtresidentemeta", pidtresidentemeta) :
                new ObjectParameter("pidtresidentemeta", typeof(int));
    
            var pidtmetaParameter = pidtmeta.HasValue ?
                new ObjectParameter("pidtmeta", pidtmeta) :
                new ObjectParameter("pidtmeta", typeof(int));
    
            var pidttrabajadorParameter = pidttrabajador.HasValue ?
                new ObjectParameter("pidttrabajador", pidttrabajador) :
                new ObjectParameter("pidttrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarResidenteMeta", pidtresidentemetaParameter, pidtmetaParameter, pidttrabajadorParameter);
        }
    
        public virtual int spModificarTareo(Nullable<int> pidttareo, Nullable<int> pnumero, Nullable<System.DateTime> pfechaInicio, Nullable<System.DateTime> pfechaFin, string pdescripcion, Nullable<bool> pestado, Nullable<int> pidtmeta)
        {
            var pidttareoParameter = pidttareo.HasValue ?
                new ObjectParameter("pidttareo", pidttareo) :
                new ObjectParameter("pidttareo", typeof(int));
    
            var pnumeroParameter = pnumero.HasValue ?
                new ObjectParameter("pnumero", pnumero) :
                new ObjectParameter("pnumero", typeof(int));
    
            var pfechaInicioParameter = pfechaInicio.HasValue ?
                new ObjectParameter("pfechaInicio", pfechaInicio) :
                new ObjectParameter("pfechaInicio", typeof(System.DateTime));
    
            var pfechaFinParameter = pfechaFin.HasValue ?
                new ObjectParameter("pfechaFin", pfechaFin) :
                new ObjectParameter("pfechaFin", typeof(System.DateTime));
    
            var pdescripcionParameter = pdescripcion != null ?
                new ObjectParameter("pdescripcion", pdescripcion) :
                new ObjectParameter("pdescripcion", typeof(string));
    
            var pestadoParameter = pestado.HasValue ?
                new ObjectParameter("pestado", pestado) :
                new ObjectParameter("pestado", typeof(bool));
    
            var pidtmetaParameter = pidtmeta.HasValue ?
                new ObjectParameter("pidtmeta", pidtmeta) :
                new ObjectParameter("pidtmeta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarTareo", pidttareoParameter, pnumeroParameter, pfechaInicioParameter, pfechaFinParameter, pdescripcionParameter, pestadoParameter, pidtmetaParameter);
        }
    
        public virtual int spModificarTrabajador(Nullable<int> id_trabajador, string nombres, string apellidoPaterno, string apellidoMaterno, string sexo, string estadoCivil, string direccion, string dni, string celular, string celularInstitucional, Nullable<System.DateTime> fechaNacimiento, byte[] foto, string correoelectronico, Nullable<int> idtipovia, string nombrevia, string numerovia, string departamento, Nullable<int> idtzona, string nombrezona, string referencia, Nullable<int> idtdistrito, Nullable<int> idtnacionalidad)
        {
            var id_trabajadorParameter = id_trabajador.HasValue ?
                new ObjectParameter("id_trabajador", id_trabajador) :
                new ObjectParameter("id_trabajador", typeof(int));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("apellidoPaterno", apellidoPaterno) :
                new ObjectParameter("apellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("apellidoMaterno", apellidoMaterno) :
                new ObjectParameter("apellidoMaterno", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("estadoCivil", estadoCivil) :
                new ObjectParameter("estadoCivil", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var dniParameter = dni != null ?
                new ObjectParameter("dni", dni) :
                new ObjectParameter("dni", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("celular", celular) :
                new ObjectParameter("celular", typeof(string));
    
            var celularInstitucionalParameter = celularInstitucional != null ?
                new ObjectParameter("celularInstitucional", celularInstitucional) :
                new ObjectParameter("celularInstitucional", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("foto", foto) :
                new ObjectParameter("foto", typeof(byte[]));
    
            var correoelectronicoParameter = correoelectronico != null ?
                new ObjectParameter("correoelectronico", correoelectronico) :
                new ObjectParameter("correoelectronico", typeof(string));
    
            var idtipoviaParameter = idtipovia.HasValue ?
                new ObjectParameter("idtipovia", idtipovia) :
                new ObjectParameter("idtipovia", typeof(int));
    
            var nombreviaParameter = nombrevia != null ?
                new ObjectParameter("nombrevia", nombrevia) :
                new ObjectParameter("nombrevia", typeof(string));
    
            var numeroviaParameter = numerovia != null ?
                new ObjectParameter("numerovia", numerovia) :
                new ObjectParameter("numerovia", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("departamento", departamento) :
                new ObjectParameter("departamento", typeof(string));
    
            var idtzonaParameter = idtzona.HasValue ?
                new ObjectParameter("idtzona", idtzona) :
                new ObjectParameter("idtzona", typeof(int));
    
            var nombrezonaParameter = nombrezona != null ?
                new ObjectParameter("nombrezona", nombrezona) :
                new ObjectParameter("nombrezona", typeof(string));
    
            var referenciaParameter = referencia != null ?
                new ObjectParameter("referencia", referencia) :
                new ObjectParameter("referencia", typeof(string));
    
            var idtdistritoParameter = idtdistrito.HasValue ?
                new ObjectParameter("idtdistrito", idtdistrito) :
                new ObjectParameter("idtdistrito", typeof(int));
    
            var idtnacionalidadParameter = idtnacionalidad.HasValue ?
                new ObjectParameter("idtnacionalidad", idtnacionalidad) :
                new ObjectParameter("idtnacionalidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarTrabajador", id_trabajadorParameter, nombresParameter, apellidoPaternoParameter, apellidoMaternoParameter, sexoParameter, estadoCivilParameter, direccionParameter, dniParameter, celularParameter, celularInstitucionalParameter, fechaNacimientoParameter, fotoParameter, correoelectronicoParameter, idtipoviaParameter, nombreviaParameter, numeroviaParameter, departamentoParameter, idtzonaParameter, nombrezonaParameter, referenciaParameter, idtdistritoParameter, idtnacionalidadParameter);
        }
    
        public virtual int spModificarVariables(Nullable<int> pidtvariables, string paño, Nullable<int> psueldominimo, Nullable<int> puit)
        {
            var pidtvariablesParameter = pidtvariables.HasValue ?
                new ObjectParameter("pidtvariables", pidtvariables) :
                new ObjectParameter("pidtvariables", typeof(int));
    
            var pañoParameter = paño != null ?
                new ObjectParameter("paño", paño) :
                new ObjectParameter("paño", typeof(string));
    
            var psueldominimoParameter = psueldominimo.HasValue ?
                new ObjectParameter("psueldominimo", psueldominimo) :
                new ObjectParameter("psueldominimo", typeof(int));
    
            var puitParameter = puit.HasValue ?
                new ObjectParameter("puit", puit) :
                new ObjectParameter("puit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spModificarVariables", pidtvariablesParameter, pañoParameter, psueldominimoParameter, puitParameter);
        }
    
        public virtual int spProductoProyecto(string nombre, string productoproyecto, Nullable<int> año, Nullable<int> idprogramapresupuestal)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var productoproyectoParameter = productoproyecto != null ?
                new ObjectParameter("productoproyecto", productoproyecto) :
                new ObjectParameter("productoproyecto", typeof(string));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var idprogramapresupuestalParameter = idprogramapresupuestal.HasValue ?
                new ObjectParameter("idprogramapresupuestal", idprogramapresupuestal) :
                new ObjectParameter("idprogramapresupuestal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spProductoProyecto", nombreParameter, productoproyectoParameter, añoParameter, idprogramapresupuestalParameter);
        }
    
        public virtual ObjectResult<spTareoObras_Result> spTareoObras(Nullable<int> pidtmeta, Nullable<int> pidttareo)
        {
            var pidtmetaParameter = pidtmeta.HasValue ?
                new ObjectParameter("pidtmeta", pidtmeta) :
                new ObjectParameter("pidtmeta", typeof(int));
    
            var pidttareoParameter = pidttareo.HasValue ?
                new ObjectParameter("pidttareo", pidttareo) :
                new ObjectParameter("pidttareo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTareoObras_Result>("spTareoObras", pidtmetaParameter, pidttareoParameter);
        }
    
        public virtual int spTareoObras_2(Nullable<int> pidtmeta, Nullable<int> pidttareo)
        {
            var pidtmetaParameter = pidtmeta.HasValue ?
                new ObjectParameter("pidtmeta", pidtmeta) :
                new ObjectParameter("pidtmeta", typeof(int));
    
            var pidttareoParameter = pidttareo.HasValue ?
                new ObjectParameter("pidttareo", pidttareo) :
                new ObjectParameter("pidttareo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spTareoObras_2", pidtmetaParameter, pidttareoParameter);
        }
    
        public virtual ObjectResult<spTraerDepartamento_Result> spTraerDepartamento(Nullable<int> codigoDepartamento)
        {
            var codigoDepartamentoParameter = codigoDepartamento.HasValue ?
                new ObjectParameter("codigoDepartamento", codigoDepartamento) :
                new ObjectParameter("codigoDepartamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTraerDepartamento_Result>("spTraerDepartamento", codigoDepartamentoParameter);
        }
    
        public virtual ObjectResult<spTraerDistrito_Result> spTraerDistrito(Nullable<int> codigoDistrito)
        {
            var codigoDistritoParameter = codigoDistrito.HasValue ?
                new ObjectParameter("codigoDistrito", codigoDistrito) :
                new ObjectParameter("codigoDistrito", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTraerDistrito_Result>("spTraerDistrito", codigoDistritoParameter);
        }
    
        public virtual ObjectResult<spTraerMotivoFinPeriodo_Result> spTraerMotivoFinPeriodo(Nullable<int> codigoFinPeriodo)
        {
            var codigoFinPeriodoParameter = codigoFinPeriodo.HasValue ?
                new ObjectParameter("codigoFinPeriodo", codigoFinPeriodo) :
                new ObjectParameter("codigoFinPeriodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTraerMotivoFinPeriodo_Result>("spTraerMotivoFinPeriodo", codigoFinPeriodoParameter);
        }
    
        public virtual ObjectResult<spTraerNacionalidad_Result> spTraerNacionalidad(Nullable<int> codigoNacionalidad)
        {
            var codigoNacionalidadParameter = codigoNacionalidad.HasValue ?
                new ObjectParameter("codigoNacionalidad", codigoNacionalidad) :
                new ObjectParameter("codigoNacionalidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTraerNacionalidad_Result>("spTraerNacionalidad", codigoNacionalidadParameter);
        }
    
        public virtual int spTraerPeriodosTrabajador(Nullable<int> codigoTrabajador)
        {
            var codigoTrabajadorParameter = codigoTrabajador.HasValue ?
                new ObjectParameter("codigoTrabajador", codigoTrabajador) :
                new ObjectParameter("codigoTrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spTraerPeriodosTrabajador", codigoTrabajadorParameter);
        }
    
        public virtual ObjectResult<spTraerProvincia_Result> spTraerProvincia(Nullable<int> codigoProvincia)
        {
            var codigoProvinciaParameter = codigoProvincia.HasValue ?
                new ObjectParameter("codigoProvincia", codigoProvincia) :
                new ObjectParameter("codigoProvincia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTraerProvincia_Result>("spTraerProvincia", codigoProvinciaParameter);
        }
    
        public virtual ObjectResult<spTraerTipoVia_Result> spTraerTipoVia(Nullable<int> codigoVia)
        {
            var codigoViaParameter = codigoVia.HasValue ?
                new ObjectParameter("codigoVia", codigoVia) :
                new ObjectParameter("codigoVia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTraerTipoVia_Result>("spTraerTipoVia", codigoViaParameter);
        }
    
        public virtual ObjectResult<spTraerTipoZona_Result> spTraerTipoZona(Nullable<int> codigoZona)
        {
            var codigoZonaParameter = codigoZona.HasValue ?
                new ObjectParameter("codigoZona", codigoZona) :
                new ObjectParameter("codigoZona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTraerTipoZona_Result>("spTraerTipoZona", codigoZonaParameter);
        }
    
        public virtual ObjectResult<spTraerTrabajador_Result> spTraerTrabajador(Nullable<int> codigoTrabajador)
        {
            var codigoTrabajadorParameter = codigoTrabajador.HasValue ?
                new ObjectParameter("codigoTrabajador", codigoTrabajador) :
                new ObjectParameter("codigoTrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTraerTrabajador_Result>("spTraerTrabajador", codigoTrabajadorParameter);
        }
    
        public virtual int spValidarPeriodoFechaFin(Nullable<System.DateTime> varFechaFin, Nullable<int> codigoTrabajador)
        {
            var varFechaFinParameter = varFechaFin.HasValue ?
                new ObjectParameter("varFechaFin", varFechaFin) :
                new ObjectParameter("varFechaFin", typeof(System.DateTime));
    
            var codigoTrabajadorParameter = codigoTrabajador.HasValue ?
                new ObjectParameter("codigoTrabajador", codigoTrabajador) :
                new ObjectParameter("codigoTrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spValidarPeriodoFechaFin", varFechaFinParameter, codigoTrabajadorParameter);
        }
    
        public virtual int spValidarPeriodoFechaInicio(Nullable<System.DateTime> varFechaInicio, Nullable<int> codigoTrabajador)
        {
            var varFechaInicioParameter = varFechaInicio.HasValue ?
                new ObjectParameter("varFechaInicio", varFechaInicio) :
                new ObjectParameter("varFechaInicio", typeof(System.DateTime));
    
            var codigoTrabajadorParameter = codigoTrabajador.HasValue ?
                new ObjectParameter("codigoTrabajador", codigoTrabajador) :
                new ObjectParameter("codigoTrabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spValidarPeriodoFechaInicio", varFechaInicioParameter, codigoTrabajadorParameter);
        }
    
        public virtual ObjectResult<traerProvincia_Result> traerProvincia(Nullable<int> codigoProvincia)
        {
            var codigoProvinciaParameter = codigoProvincia.HasValue ?
                new ObjectParameter("codigoProvincia", codigoProvincia) :
                new ObjectParameter("codigoProvincia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<traerProvincia_Result>("traerProvincia", codigoProvinciaParameter);
        }
    
        public virtual int uspCrearTareo(Nullable<int> idMeta, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechafin, Nullable<int> idResidente, string tipo)
        {
            var idMetaParameter = idMeta.HasValue ?
                new ObjectParameter("idMeta", idMeta) :
                new ObjectParameter("idMeta", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechafinParameter = fechafin.HasValue ?
                new ObjectParameter("fechafin", fechafin) :
                new ObjectParameter("fechafin", typeof(System.DateTime));
    
            var idResidenteParameter = idResidente.HasValue ?
                new ObjectParameter("idResidente", idResidente) :
                new ObjectParameter("idResidente", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCrearTareo", idMetaParameter, fechaInicioParameter, fechafinParameter, idResidenteParameter, tipoParameter);
        }
    
        public virtual ObjectResult<uspListarTiposDeTrabajador_Result> uspListarTiposDeTrabajador()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspListarTiposDeTrabajador_Result>("uspListarTiposDeTrabajador");
        }
    }
}
